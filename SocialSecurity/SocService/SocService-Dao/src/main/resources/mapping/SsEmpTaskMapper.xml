<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.dao.SsEmpTaskMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.SsEmpTask">
        <id column="emp_task_id" property="empTaskId" />
        <result column="company_id" property="companyId" />
        <result column="employee_id" property="employeeId" />
        <result column="customer_id" property="customerId" />
        <result column="emp_archive_id" property="empArchiveId" />
        <result column="is_change" property="isChange" />
        <result column="task_category" property="taskCategory" />
        <result column="task_category_special" property="taskCategorySpecial" />
        <result column="urgent" property="urgent" />
        <result column="submitter_id" property="submitterId" />
        <result column="submitter_name" property="submitterName" />
        <result column="submitter_dept_id" property="submitterDeptId" />
        <result column="submitter_dept_name" property="submitterDeptName" />
        <result column="submit_time" property="submitTime" />
        <result column="expire_date" property="expireDate" />
        <result column="submitter_remark" property="submitterRemark" />
        <result column="handle_user_id" property="handleUserId" />
        <result column="handle_user_name" property="handleUserName" />
        <result column="emp_ss_serial" property="empSsSerial" />
        <result column="handle_way" property="handleWay" />
        <result column="handle_month" property="handleMonth" />
        <result column="handle_remark" property="handleRemark" />
        <result column="handle_remark_man" property="handleRemarkMan" />
        <result column="handle_remark_date" property="handleRemarkDate" />
        <result column="rejection_remark" property="rejectionRemark" />
        <result column="rejection_remark_man" property="rejectionRemarkMan" />
        <result column="rejection_remark_date" property="rejectionRemarkDate" />
        <result column="task_status" property="taskStatus" />
        <result column="handle_status" property="handleStatus" />
        <result column="chat_history" property="chatHistory" />
        <result column="start_handle_date" property="startHandleDate" />
        <result column="send_check_date" property="sendCheckDate" />
        <result column="finish_date" property="finishDate" />
        <result column="task_form_content" property="taskFormContent" />
        <result column="salary" property="salary" />
        <result column="emp_classify" property="empClassify" />
        <result column="emp_base" property="empBase" />
        <result column="start_month" property="startMonth" />
        <result column="end_month" property="endMonth" />
        <result column="in_date" property="inDate" />
        <result column="out_date" property="outDate" />
        <result column="welfare_unit" property="welfareUnit" />
        <result column="business_interface_id" property="businessInterfaceId" />
        <result column="old_agreement_id" property="oldAgreementId" />
        <result column="process_id" property="processId" />
        <result column="task_id" property="taskId" />
        <result column="task_def_key" property="taskDefKey" />
        <result column="pro_def_key" property="proDefKey" />
        <result column="policy_detail_id" property="policyDetailId" />
        <result column="af_bpo_fc" property="afBpoFc" />
        <result column="is_active" property="isActive" />
        <result column="created_time" property="createdTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="created_by" property="createdBy" />
        <result column="modified_by" property="modifiedBy" />
        <result column="created_display_name" property="createdDisplayName" />
        <result column="modified_display_name" property="modifiedDisplayName" />
        <result column="leader_ship_id" property="leaderShipId" />
        <result column="leader_ship_name" property="leaderShipName" />
        <result column="service_center_id" property="serviceCenterId" />
        <result column="service_center" property="serviceCenter" />
        <result column="old_city_code" property="oldCityCode" />
        <result column="new_city_code" property="newCityCode" />
        <result column="social_start_and_stop" property="socialStartAndStop" />
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMapDto" extends="BaseResultMap"
               type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpTaskBO">
        <!-- emp_employee -->
        <result column="employee_name" property="employeeName"/>
        <result column="employee_id" property="employeeId"/>
        <result column="id_num" property="idNum"/>
        <result column="id_card_type" property="idCardType"/>
        <!-- sal_company -->
        <result column="company_id" property="companyId"/>
        <result column="title" property="title"/>

        <!-- ss_com_account -->
        <result column="com_account_id" property="comAccountId"/>
        <result column="ss_pwd" property="ssPwd"/>
        <result column="settlement_area" property="settlementArea"/>
        <result column="ss_account_type" property="ssAccountType"/>
        <result column="ss_account" property="ssAccount"/>
        <result column="supplier_id" property="supplierId"/>

        <!-- ss_emp_archive -->
        <result column="emp_classify" property="empClassify"/>
        <result column="start_month" property="startMonth"/>
        <result column="submitter_name" property="submitterName"/>

    </resultMap>

    <resultMap id="QueryBachResultMap" extends="BaseResultMapDto"
               type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpTaskBO">
        <collection property="empTaskPeriods"
                    ofType="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.SsEmpTaskPeriod">
            <id column="emp_task_period_id" property="empTaskPeriodId"/>
            <result column="emp_task_id_p" property="empTaskId"/>
            <result column="base_amount_p" property="baseAmount"/>
            <result column="start_month_p" property="startMonth"/>
            <result column="end_month_p" property="endMonth"/>
            <result column="remit_way_p" property="remitWay"/>
        </collection>
    </resultMap>

    <sql id="employeeDailyOperatorQuery_select">
        et.emp_task_id,
        et.customer_id,
        et.emp_archive_id,
        et.task_category,
        et.task_category_special,
        et.urgent,
        et.submitter_id,
        et.submitter_name,
        et.submitter_dept_id,
        et.submitter_dept_name,
        et.submit_time,
        et.expire_date,
        et.submitter_remark,
        et.task_form_content,
        et.salary,
        et.handle_user_id,
        et.handle_user_name,
        et.emp_ss_serial,
        et.is_change,
        et.handle_way,
        et.handle_month,
        et.handle_remark,
        et.handle_remark_man,
        et.handle_remark_date,
        et.rejection_remark,
        et.rejection_remark_man,
        et.rejection_remark_date,
        et.task_status,
        et.handle_status,
        et.start_handle_date,
        et.send_check_date,
        et.finish_date,
        et.start_month,
        et.end_month,
        et.chat_history,
        et.business_interface_id,
        et.old_agreement_id,
        et.created_time,
        et.created_display_name,
        e.employee_name,
        e.employee_id,
        e.id_num,
        ca.com_account_id,
        ca.ss_pwd,
        ca.settlement_area,
        ca.ss_account_type,
        ca.ss_account,
        ca.supplier_id,
        c.company_id,
        c.title
    </sql>
    <sql id="employeeDailyOperatorQuery_where">
        <if test="employeeName != null">
            AND e.employee_name LIKE CONCAT('%',#{employeeName},'%')
        </if>
        <if test="settlementArea != null">
            AND ca.settlement_area = #{settlementArea}
        </if>
        <if test="ssAccountType != null">
            AND ca.ss_account_type = #{ssAccountType}
        </if>
        <if test="empClassify != null">
            AND et.emp_classify = #{empClassify}
        </if>
        <if test="ssAccount != null">
            AND ca.ss_account = #{ssAccount}
        </if>
        <if test="companyId != null">
            AND c.company_id = #{companyId}
        </if>
        <if test="idNum != null">
            AND e.id_num = #{idNum}
        </if>
        <if test="title != null">
            AND c.title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="employeeId != null">
            AND e.employee_id  = #{employeeId}
        </if>
        <if test="urgent != null">
            AND et.urgent = #{urgent}
        </if>
        <if test="startMonth != null">
            AND et.start_month = #{startMonth}
        </if>
        <if test="taskCategory!=null">
            AND et.task_category = #{taskCategory}
        </if>
        <!--
            办理状态：1、未处理（-1 本月处理 -2 下月处理） 2 、处理中  3 已完成（已办） 4、批退 5、不需处理
        -->
        AND et.task_status != 5
        <choose>
            <when test="taskStatus == null">
                AND et.task_status NOT IN (2,3,4)
            </when>
            <when test="taskStatus == -1">
                AND date_format(et.submit_time,'%Y-%m-%d') <![CDATA[ <= ]]>
                str_to_date(CONCAT(date_format(CURTIME(),'%Y-%m'),'-',if(isnull(ca.expire_date),26,ca.expire_date)),'%Y-%m-%d') AND
                et.task_status NOT IN (2,3,4)
            </when>
            <when test="taskStatus == -2">
                AND date_format(et.submit_time,'%Y-%m-%d') <![CDATA[ > ]]>
                str_to_date(CONCAT(date_format(CURTIME(),'%Y-%m'),'-',if(isnull(ca.expire_date),26,ca.expire_date)),'%Y-%m-%d') AND
                et.task_status NOT IN (2,3,4)
            </when>
            <otherwise>
                AND et.task_status = #{taskStatus}
            </otherwise>
        </choose>
        <!--
            任务类型，DicItem.DicItemValue 1:新进：2：转入 3调整 4 补缴 5 转出 6终止 7退账 8 提取 9特殊操作
        -->
        <if test="taskCategories != null">
            AND et.task_category !=9
            <!--<foreach collection="taskCategories" index="index" item="task_category" open="(" separator=","-->
            <!--close=")">#{task_category}-->
            <!--</foreach>-->
        </if>
    </sql>
    <!--雇员日常操作查询-->
    <select id="employeeDailyOperatorQuery" resultMap="BaseResultMapDto">
        select
        <include refid="employeeDailyOperatorQuery_select"/>
        from ss_emp_task et
        <if test="userId != null">
        INNER JOIN ss_dataauth_company sdc ON et.company_id = sdc.company_id AND sdc.user_id = #{userId}
        INNER JOIN ss_dataauth_welfare_unit sdwu ON et.welfare_unit = sdwu.welfare_unit AND sdwu.user_id = #{userId}
        INNER JOIN ss_dataauth_task_category sdtc ON et.task_category = sdtc.task_category AND sdtc.user_id = #{userId}
        </if>
        LEFT JOIN sal_company c on et.company_id = c.company_id
        LEFT JOIN emp_employee e ON et.employee_id = e.employee_id
        LEFT JOIN ss_account_com_relation ssac ON ssac.company_id = c.company_id AND ssac.is_active = 1
        LEFT JOIN ss_com_account ca ON ca.com_account_id = ssac.com_account_id AND ca.is_active = 1
        <where>
            AND et.is_active = 1
            <include refid="employeeDailyOperatorQuery_where"/>
        </where>
        ORDER BY et.created_time DESC ,et.employee_id DESC
    </select>
    <!--雇员特殊操作查询-->
    <select id="employeeSpecialOperatorQuery" resultMap="BaseResultMapDto">
        select
        et.emp_task_id,et.customer_id,et.emp_archive_id,et.task_category,et.task_category_special,et.urgent,et.submitter_id,et.submitter_name,et.submitter_dept_id,et.submitter_dept_name,et.submit_time,et.expire_date,et.submitter_remark,et.task_form_content,et.salary,et.handle_user_id,et.handle_user_name,et.emp_ss_serial,et.handle_way,et.handle_month,et.handle_remark,et.handle_remark_man,et.handle_remark_date,et.rejection_remark,et.rejection_remark_man,et.rejection_remark_date,et.task_status,et.handle_status,et.start_handle_date,et.send_check_date,et.finish_date,et.end_month,et.chat_history,et.business_interface_id,
        et.old_agreement_id,
        ,e.employee_name , e.employee_id , e.id_num
        ,ca.com_account_id,ca.ss_pwd,ca.settlement_area,ca.ss_account_type,ca.ss_account,ca.supplier_id
        ,c.company_id,c.title
        ,et.emp_classify,
        et.is_change,
        et.start_month,
        et.created_time,
        et.created_display_name
        from ss_emp_task et
        <if test="userId != null">
        INNER JOIN ss_dataauth_company sdc ON et.company_id = sdc.company_id AND sdc.user_id = #{userId}
        INNER JOIN ss_dataauth_welfare_unit sdwu ON et.welfare_unit = sdwu.welfare_unit AND sdwu.user_id = #{userId}
        INNER JOIN ss_dataauth_task_category sdtc ON et.task_category = sdtc.task_category AND sdtc.user_id = #{userId}
        </if>
        LEFT JOIN sal_company c on et.company_id = c.company_id
        LEFT JOIN emp_employee e on et.employee_id = e.employee_id
        LEFT JOIN ss_account_com_relation ssac on ssac.company_id = c.company_id and ssac.is_active = 1
        LEFT JOIN ss_com_account ca on ca.com_account_id = ssac.com_account_id and ca.is_active = 1
        <where>
            and et.is_active = 1
            <if test="employeeName != null">
                and e.employee_name LIKE CONCAT('%',#{employeeName},'%')
            </if>
            <if test="settlementArea != null">
                and ca.settlement_area = #{settlementArea}
            </if>
            <if test="ssAccountType != null">
                and ca.ss_account_type = #{ssAccountType}
            </if>
            <if test="empClassify != null">
                and et.emp_classify = #{empClassify}
            </if>
            <if test="ssAccount != null">
                and ca.ss_account = #{ssAccount}
            </if>
            <if test="companyId != null">
                and c.company_id LIKE CONCAT('%',#{companyId},'%')
            </if>
            <if test="idNum != null">
                and e.id_num LIKE CONCAT('%',#{idNum},'%')
            </if>
            <if test="title != null">
                and c.title LIKE CONCAT('%',#{title},'%')
            </if>
            <if test="employeeId != null">
                and e.employee_id LIKE CONCAT('%',#{employeeId},'%')
            </if>
            <if test="urgent != null">
                and et.urgent = #{urgent}
            </if>
            <if test="startMonth != null">
                and et.start_month = #{startMonth}
            </if>
            <!--
                办理状态：1、未处理（-1 本月处理 -2 下月处理） 2 、处理中  3 已完成（已办） 4、批退 5、不需处理
            -->
            and et.task_status != 5
            <if test="taskStatus != null">
                and et.task_status = #{taskStatus}
            </if>
            <!--
                任务类型，DicItem.DicItemValue 1:新进：2：转入 3调整 4 补缴 5 转出 6终止 7退账 8 提取 9特殊操作
            -->
            AND et.task_category = 9
            <if test="beginSubmitTime != null and endSubmitTime != null">
                and date_format(et.submit_time,'%Y-%m-%d') BETWEEN #{beginSubmitTime} AND #{endSubmitTime}
            </if>
        </where>
    </select>

    <!--通过社保档案ID 查询 历史任务单-->
    <select id="queryTaskByEmpArchiveId" resultMap="BaseResultMap">
        SELECT
        et.emp_task_id,
        et.handle_way,
        et.task_category,
        et.task_category_special,
        et.submitter_name,
        et.submit_time,
        et.task_status
        FROM
        ss_emp_task et
        WHERE et.emp_archive_id = #{empArchiveId}
        AND et.is_active = 1
        ORDER BY et.emp_task_id DESC
    </select>

    <update id="updateMyselfColumnById">
        UPDATE ss_emp_task SET
        <if test="companyId!=null and companyId.trim()!=''.toString()">
            company_id = #{companyId},
        </if>
        <if test="employeeId!=null and employeeId.trim()!=''.toString()">
            employee_id = #{employeeId},
        </if>
        <if test="customerId!=null and customerId.trim()!=''.toString()">
            customer_id = #{customerId},
        </if>
        <if test="empArchiveId!=null">
            emp_archive_id = #{empArchiveId},
        </if>
        <if test="taskCategory!=null">
            task_category = #{taskCategory},
        </if>
        <if test="taskCategorySpecial!=null">
            task_category_special = #{taskCategorySpecial},
        </if>
        <if test="urgent!=null">
            urgent = #{urgent},
        </if>
        <if test="submitterId!=null and submitterId.trim()!=''.toString()">
            submitter_id = #{submitterId},
        </if>
        <if test="submitterName!=null and submitterName.trim()!=''.toString()">
            submitter_name = #{submitterName},
        </if>
        <if test="submitterDeptId!=null and submitterDeptId.trim()!=''.toString()">
            submitter_dept_id = #{submitterDeptId},
        </if>
        <if test="submitterDeptName!=null and submitterDeptName.trim()!=''.toString()">
            submitter_dept_name = #{submitterDeptName},
        </if>
        <if test="submitTime!=null">
            submit_time = #{submitTime},
        </if>
        <if test="expireDate!=null">
            expire_date = #{expireDate},
        </if>
        <if test="submitterRemark!=null and submitterRemark.trim()!=''.toString()">
            submitter_remark = #{submitterRemark},
        </if>
        <if test="taskFormContent!=null and taskFormContent.trim()!=''.toString()">
            task_form_content = #{taskFormContent},
        </if>
        <if test="salary!=null">
            salary = #{salary},
        </if>
        <if test="empClassify!=null">
            emp_classify = #{empClassify},
        </if>
        <if test="handleUserId!=null and handleUserId.trim()!=''.toString()">
            handle_user_id = #{handleUserId},
        </if>
        <if test="handleUserName!=null and handleUserName.trim()!=''.toString()">
            handle_user_name = #{handleUserName},
        </if>
        <if test="empSsSerial!=null and empSsSerial.trim()!=''.toString()">
            emp_ss_serial = #{empSsSerial},
        </if>
        <if test="handleWay!=null">
            handle_way = #{handleWay},
        </if>
        <if test="handleMonth!=null and handleMonth.trim()!=''.toString()">
            handle_month = #{handleMonth},
        </if>
        <if test="handleRemark!=null">
            handle_remark = #{handleRemark},
        </if>
        <if test="handleRemarkMan!=null and handleRemarkMan.trim()!=''.toString()">
            handle_remark_man = #{handleRemarkMan},
        </if>
        <if test="handleRemarkDate!=null">
            handle_remark_date = #{handleRemarkDate},
        </if>

        <if test="rejectionRemarkMan!=null and rejectionRemarkMan.trim()!=''.toString()">
            rejection_remark_man = #{rejectionRemarkMan},
        </if>
        <if test="rejectionRemarkDate!=null">
            rejection_remark_date = #{rejectionRemarkDate},
        </if>
        <if test="taskStatus!=null">
            task_status = #{taskStatus},
        </if>
        <if test="handleStatus!=null">
            handle_status = #{handleStatus},
        </if>
        <if test="startHandleDate!=null">
            start_handle_date = #{startHandleDate},
        </if>
        <if test="sendCheckDate!=null">
            send_check_date = #{sendCheckDate},
        </if>
        <if test="finishDate!=null">
            finish_date = #{finishDate},
        </if>
        <if test="startMonth!=null and startMonth.trim()!=''.toString()">
            start_month = #{startMonth},
        </if>
        <if test="chatHistory!=null and chatHistory.trim()!=''.toString()">
            chat_history = #{chatHistory},
        </if>
        <if test="businessInterfaceId!=null and businessInterfaceId.trim()!=''.toString()">
            business_interface_id = #{businessInterfaceId},
        </if>
        <if test="isActive!=null">
            is_active = #{isActive},
        </if>
        <if test="createdTime!=null">
            created_time = #{createdTime},
        </if>
        <if test="modifiedTime!=null">
            modified_time = #{modifiedTime},
        </if>
        <if test="createdBy!=null">
            created_by = #{createdBy},
        </if>
        <if test="modifiedBy!=null">
            modified_by = #{modifiedBy},
        </if>
        <if test="modifiedDisplayName!=null">
            modified_display_name = #{modifiedDisplayName},
        </if>
        end_month = #{endMonth},
        rejection_remark = #{rejectionRemark}
        WHERE emp_task_id = #{empTaskId}
    </update>

    <select id="selectMaxSsSerialByTaskId" resultType="java.lang.String">
        SELECT IFNULL(max(cast(ss_serial as SIGNED INTEGER)),0)+1 AS ss_serial FROM ss_emp_archive WHERE com_account_id =
        (
        SELECT sacr.com_account_id FROM ss_emp_task et
        LEFT JOIN ss_account_com_relation sacr
        ON et.company_id =sacr.company_id AND sacr.is_active=1
        WHERE et.emp_task_id = #{empTaskId}
        )
    </select>

    <select id="queryBatchEmpArchiveByEmpTaskIds" resultMap="QueryBachResultMap">
        SELECT
        sebp.emp_task_period_id,
        sebp.emp_task_id AS emp_task_id_p,
        sebp.base_amount AS base_amount_p,
        sebp.start_month AS start_month_p,
        sebp.end_month AS end_month_p,
        sebp.remit_way AS remit_way_p,
        ssac.com_account_id,
        et.emp_task_id,
        et.customer_id,
        et.emp_archive_id,
        et.task_category,
        et.task_category_special,
        et.urgent,
        et.submitter_id,
        et.submitter_name,
        et.submitter_dept_id,
        et.submitter_dept_name,
        et.submit_time,
        et.expire_date,
        et.submitter_remark,
        et.task_form_content,
        et.salary,
        et.handle_user_id,
        et.handle_user_name,
        et.emp_ss_serial,
        et.handle_way,
        et.handle_month,
        et.handle_remark,
        et.rejection_remark,
        et.rejection_remark_man,
        et.rejection_remark_date,
        et.task_status,
        et.handle_status,
        et.start_month,
        et.end_month,
        et.in_date,
        et.emp_base,
        et.chat_history,
        et.task_id,
        et.welfare_unit,
        et.policy_detail_id,
        et.business_interface_id,
        e.employee_name,
        e.employee_id,
        e.id_num,
        c.company_id,
        c.title
        FROM ss_emp_task et
        LEFT JOIN sal_company c on et.company_id = c.company_id AND c.is_active=1
        LEFT JOIN emp_employee e ON et.employee_id = e.employee_id
        LEFT JOIN ss_account_com_relation ssac ON ssac.company_id = c.company_id AND ssac.is_active = 1
        LEFT JOIN ss_emp_task_period sebp ON sebp.emp_task_id = et.emp_task_id AND sebp.is_active = 1
        WHERE et.emp_task_id IN
        <foreach collection="empTaskIdList" item="empTaskId" open="(" close=")" separator=",">
            #{empTaskId}
        </foreach>
        AND et.task_status = 1
    </select>

    <select id="queryBatchTaskByCondition" resultMap="QueryBachResultMap">
        SELECT
        sebp.emp_task_period_id,
        sebp.emp_task_id AS emp_task_id_p,
        sebp.base_amount AS base_amount_p,
        sebp.start_month AS start_month_p,
        sebp.end_month AS end_month_p,
        sebp.remit_way AS remit_way_p,
        ssac.com_account_id,
        et.emp_task_id,
        et.customer_id,
        et.emp_archive_id,
        et.task_category,
        et.task_category_special,
        et.urgent,
        et.submitter_id,
        et.submitter_name,
        et.submitter_dept_id,
        et.submitter_dept_name,
        et.submit_time,
        et.expire_date,
        et.submitter_remark,
        et.task_form_content,
        et.salary,
        et.handle_user_id,
        et.handle_user_name,
        et.emp_ss_serial,
        et.handle_way,
        et.handle_month,
        et.handle_remark,
        et.rejection_remark,
        et.rejection_remark_man,
        et.rejection_remark_date,
        et.task_status,
        et.handle_status,
        et.start_month,
        et.end_month,
        et.in_date,
        et.emp_base,
        et.chat_history,
        et.task_id,
        et.welfare_unit,
        et.policy_detail_id,
        et.business_interface_id,
        e.employee_name,
        e.employee_id,
        e.id_num,
        c.company_id,
        c.title
        FROM ss_emp_task et
        LEFT JOIN sal_company c on et.company_id = c.company_id AND c.is_active=1
        LEFT JOIN emp_employee e ON et.employee_id = e.employee_id
        LEFT JOIN ss_account_com_relation ssac ON ssac.company_id = c.company_id AND ssac.is_active = 1
        LEFT JOIN ss_emp_task_period sebp ON sebp.emp_task_id = et.emp_task_id AND sebp.is_active = 1
        LEFT JOIN ss_com_account ca ON ca.com_account_id = ssac.com_account_id AND ca.is_active = 1
        WHERE 1=1
        AND et.task_status = 1
        AND et.task_category = #{taskCategory}
        <if test="employeeName != null and employeeName.trim()!=''">
            AND e.employee_name LIKE CONCAT('%',#{employeeName},'%')
        </if>
        <if test="settlementArea != null and settlementArea.trim()!=''">
            AND ca.settlement_area = #{settlementArea}
        </if>
        <if test="ssAccountType != null and ssAccountType!=''">
            AND ca.ss_account_type = #{ssAccountType}
        </if>
        <if test="empClassify != null and empClassify!=''">
            AND et.emp_classify = #{empClassify}
        </if>
        <if test="ssAccount != null and ssAccount.trim()!=''">
            AND ca.ss_account = #{ssAccount}
        </if>
        <if test="companyId != null and companyId.trim()!=''">
            AND c.company_id LIKE CONCAT('%',#{companyId},'%')
        </if>
        <if test="idNum != null and idNum.trim()!=''">
            AND e.id_num LIKE CONCAT('%',#{idNum},'%')
        </if>
        <if test="title != null and title.trim()!=''">
            AND c.title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="employeeId != null and employeeId.trim()!=''">
            AND e.employee_id LIKE CONCAT('%',#{employeeId},'%')
        </if>
        <if test="startMonth != null and startMonth.trim()!=''">
            AND et.start_month = #{startMonth}
        </if>
        <choose>
            <when test="taskStatus == -1">
                AND et.submit_time <![CDATA[ <= ]]>
                str_to_date(CONCAT(date_format(CURTIME(),'%Y-%m'),'-',if(isnull(ca.expire_date),26,ca.expire_date)),'%Y-%m-%d')
            </when>
            <when test="taskStatus == -2">
                AND et.submit_time <![CDATA[ > ]]>
                str_to_date(CONCAT(date_format(CURTIME(),'%Y-%m'),'-',if(isnull(ca.expire_date),26,ca.expire_date)),'%Y-%m-%d')
            </when>
            <otherwise>
                AND et.task_status = 1
            </otherwise>
        </choose>
    </select>
    <!--通过TASKID等条件查询任务单-->
    <select id="queryByTaskId" resultMap="BaseResultMap">
        SELECT
        et.emp_task_id,
        et.customer_id,
        et.emp_archive_id,
        et.task_category,
        et.task_category_special,
        et.urgent,
        et.submitter_id,
        et.submitter_name,
        et.submitter_dept_id,
        et.submitter_dept_name,
        et.submit_time,
        et.expire_date,
        et.submitter_remark,
        et.task_form_content,
        et.salary,
        et.handle_user_id,
        et.handle_user_name,
        et.emp_ss_serial,
        et.handle_way,
        et.handle_month,
        et.handle_remark,
        et.rejection_remark,
        et.rejection_remark_man,
        et.rejection_remark_date,
        et.task_status,
        et.handle_status,
        et.start_month,
        et.end_month,
        et.in_date,
        et.emp_base,
        et.chat_history,
        et.business_interface_id
        FROM
        ss_emp_task et
        <where>
            et.is_active = 1
            <if test="companyId != null">
                and et.company_id = #{companyId}
            </if>
            <if test="employeeId != null">
                and et.employee_id = #{employeeId}
            </if>
            <if test="taskId != null">
                and et.task_id=#{taskId}
            </if>
        </where>
    </select>

    <!--通过businessInterfaceId等条件查询任务单-->
    <select id="queryByBusinessInterfaceId" resultType="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpTaskBO">
        SELECT
        et.emp_task_id,
        et.customer_id,
        et.emp_archive_id,
        et.task_category,
        et.task_category_special,
        et.urgent,
        et.submitter_id,
        et.submitter_name,
        et.submitter_dept_id,
        et.submitter_dept_name,
        et.submit_time,
        et.expire_date,
        et.submitter_remark,
        et.task_form_content,
        et.salary,
        et.handle_user_id,
        et.handle_user_name,
        et.emp_ss_serial,
        et.handle_way,
        et.handle_month,
        et.handle_remark,
        et.rejection_remark,
        et.rejection_remark_man,
        et.rejection_remark_date,
        et.task_status,
        et.handle_status,
        et.start_month,
        et.end_month,
        et.in_date,
        et.emp_base,
        et.chat_history,
        et.business_interface_id
        FROM
        ss_emp_task et
        <where>
            et.is_active = 1
            <if test="companyId != null">
                and et.company_id = #{companyId}
            </if>
            <if test="employeeId != null">
                and et.employee_id = #{employeeId}
            </if>
            <if test="businessInterfaceId != null">
                and et.business_interface_id=#{businessInterfaceId}
            </if>
        </where>
    </select>

    <insert id="insertEmpTask" useGeneratedKeys="true" keyProperty="empTaskId">
        insert into
        ss_emp_task
        (company_id,
        employee_id,
        customer_id,
        emp_archive_id,
        is_change,
        task_category,
        task_category_special,
        urgent,
        submitter_id,
        submitter_name,
        submitter_dept_id,
        submitter_dept_name,
        submit_time,
        expire_date,
        submitter_remark,
        handle_user_id,
        handle_user_name,
        emp_ss_serial,
        handle_way,
        handle_month,
        handle_remark,
        handle_remark_man,
        handle_remark_date,
        rejection_remark,
        rejection_remark_man,
        rejection_remark_date,
        task_status,
        handle_status,
        chat_history,
        start_handle_date,
        send_check_date,
        finish_date,
        task_form_content,
        salary,
        emp_classify,
        emp_base,
        start_month,
        end_month,
        in_date,
        out_date,
        business_interface_id,
        process_id,
        task_id,
        task_def_key,
        pro_def_key,
        policy_detail_id,
        welfare_unit,
        is_active,
        created_time,
        modified_time,
        created_by,
        modified_by) VALUES
        (
        #{companyId},#{employeeId},#{customerId},#{empArchiveId},#{isChange},#{taskCategory},#{taskCategorySpecial},#{urgent},
        #{submitterId},#{submitterName},#{submitterDeptId},#{submitterDeptName},#{submitTime},#{expireDate},#{submitterRemark},
        #{handleUserId},#{handleUserName},#{empSsSerial},#{handleWay},#{handleMonth},#{handleRemark},#{handleRemarkMan},
        #{handleRemarkDate},#{rejectionRemark},#{rejectionRemarkMan},#{rejectionRemarkDate},#{taskStatus},#{handleStatus},
        #{chatHistory},#{startHandleDate},#{sendCheckDate},#{finishDate},#{taskFormContent},#{salary},#{empClassify},#{empBase},
        #{startMonth},#{endMonth},#{inDate},#{outDate},#{businessInterfaceId},#{processId},#{taskId},#{taskDefKey},
        #{proDefKey},#{policyDetailId},#{welfareUnit},
        #{isActive},#{createdTime},#{modifiedTime},#{createdBy},#{modifiedBy})
    </insert>
    <!---->
    <select id="fetchEmpArchiveId" resultType="string">
      SELECT ea.emp_archive_id from ss_emp_archive ea where ea.is_active=1
      and ea.company_id=#{companyId} and ea.employee_id=#{employeeId}
      ORDER BY ea.emp_archive_id DESC
      LIMIT 1
    </select>

    <select id="selectIdNumByEmployeeId" resultMap="BaseResultMapDto">
        SELECT id_num,id_card_type FROM emp_employee WHERE employee_id = #{employeeId}
    </select>

    <select id="fetchInjuryRatio" resultType="java.util.HashMap" >
        select com_ratio from ss_account_ratio ar
        INNER JOIN ss_emp_archive ea ON ea.com_account_id=ar.com_account_id
        where ar.is_active=1
        and ea.emp_archive_id = #{empArchiveId}
        and (#{startMonth} BETWEEN ar.start_month and ar.end_month or
        ( #{startMonth}>=ar.start_month and ar.end_month is null))

     </select>

    <select id="queryEmpTaskById" resultMap="BaseResultMap">
        SELECT
            et.emp_task_id,
            et.company_id,
            et.employee_id,
            et.customer_id,
            et.emp_archive_id,
            et.is_change,
            et.task_category,
            et.task_category_special,
            et.urgent,
            et.submitter_id,
            et.submitter_name,
            et.submitter_dept_id,
            et.submitter_dept_name,
            et.submit_time,
            et.expire_date,
            et.submitter_remark,
            et.handle_user_id,
            et.handle_user_name,
            et.emp_ss_serial,
            et.handle_way,
            et.handle_month,
            et.handle_remark,
            et.handle_remark_man,
            et.handle_remark_date,
            et.rejection_remark,
            et.rejection_remark_man,
            et.rejection_remark_date,
            et.task_status,
            et.handle_status,
            et.chat_history,
            et.start_handle_date,
            et.send_check_date,
            et.finish_date,
            et.task_form_content,
            et.salary,
            et.emp_classify,
            et.emp_base,
            et.start_month,
            et.end_month,
            et.in_date,
            et.out_date,
            et.welfare_unit,
            et.business_interface_id,
            et.old_agreement_id,
            et.process_id,
            et.task_id,
            et.task_def_key,
            et.pro_def_key,
            et.policy_detail_id,
            et.af_bpo_fc,
            et.is_active,
            et.created_time,
            et.modified_time,
            et.created_by,
            et.modified_by,
            et.created_display_name,
            et.modified_display_name,
            et.leader_ship_id,
            et.leader_ship_name,
            et.service_center_id,
            et.service_center
        FROM ss_emp_task et
        <if test="userId != null">
        INNER JOIN ss_dataauth_company sdc ON et.company_id = sdc.company_id
        INNER JOIN ss_dataauth_task_category sdtc ON et.task_category = sdtc.task_category AND sdc.user_id = sdtc.user_id
        INNER JOIN ss_dataauth_welfare_unit sdwu ON et.welfare_unit = sdwu.welfare_unit AND sdc.user_id = sdwu.user_id
        </if>
        WHERE et.is_active = 1
        <if test="empTaskId != null">
          AND et.emp_task_id = #{empTaskId}
        </if>
        <if test="userId != null">
          AND sdc.user_id = #{userId}
        </if>
    </select>
</mapper>
