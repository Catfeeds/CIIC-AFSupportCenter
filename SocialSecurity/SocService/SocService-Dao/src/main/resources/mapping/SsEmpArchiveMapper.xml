<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.dao.SsEmpArchiveMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.SsEmpArchive">
        <id column="emp_archive_id" property="empArchiveId" />
        <result column="customer_id" property="customerId" />
        <result column="company_id" property="companyId" />
        <result column="employee_id" property="employeeId" />
        <result column="com_account_id" property="comAccountId" />
        <result column="ss_serial" property="ssSerial" />
        <result column="salary" property="salary" />
        <result column="emp_classify" property="empClassify" />
        <result column="in_date" property="inDate" />
        <result column="out_date" property="outDate" />
        <result column="archive_status" property="archiveStatus" />
        <result column="archive_task_status" property="archiveTaskStatus" />
        <result column="start_month" property="startMonth" />
        <result column="end_month" property="endMonth" />
        <result column="ss_month" property="ssMonth" />
        <result column="is_active" property="isActive" />
        <result column="created_time" property="createdTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="created_by" property="createdBy" />
        <result column="modified_by" property="modifiedBy" />
        <result column="welfare_unit" property="welfareUnit" />
        <result column="service_center_id" property="serviceCenterId" />
        <result column="service_center" property="serviceCenter" />
        <result column="af_bpo_fc" property="afBpoFc" />
        <result column="emp_company_id" property="empCompanyId" />
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMapDTO" extends="BaseResultMap"
               type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpArchiveBO">
        <result column="employee_id" property="employeeId"/>
        <result column="employee_name" property="employeeName"/>
        <result column="id_card_type" property="idCardType"/>
        <result column="id_num" property="idNum"/>
        <result column="ss_account" property="ssAccount"/>
        <result column="ss_account_type" property="ssAccountType"/>
        <result column="settlement_area" property="settlementArea"/>
        <result column="title" property="title"/>
        <result column="com_account_name" property="comAccountName"/>
        <result column="ss_pwd" property="ssPwd"/>
        <result column="leadership_name" property="leaderShipName"/>
        <result column="labor_start_date" property="laborStartDate"/>
        <result column="labor_end_date" property="laborEndDate"/>
        <result column="afempStatus" property="afempStatus"/>
        <result column="outOperateDate" property="outOperateDate"/>
        <result column="end_month" property="endMonth"/>
        <result column="archive_task_status" property="archiveTaskStatus"/>
        <result column="ss_month" property="ssMonth"/>
        <result column="hasOut" property="hasOut"/>
    </resultMap>

    <resultMap id="getSsEmpInfoResultMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpInfoDetailBO" >
        <result column="employee_id" property="employeeId"/>
        <result column="company_id" property="companyId"/>
        <result column="ss_type" property="ssType"/>
        <result column="ss_type_name" property="ssTypeName"/>
        <result column="ss_month" property="ssMonth"/>
        <result column="ss_month_belong" property="ssMonthBelong"/>
        <result column="emp_amount" property="empAmount"/>

    </resultMap>
    <!-- 查询非新增和转入的雇员信息 -->
    <select id="queryByEmpTaskId" resultMap="BaseResultMapDTO">
          select
            et.employee_id,
            ea.*,
            e.employee_name,
            e.id_card_type,
            e.id_num,
            sca.ss_account_type
            FROM ss_emp_task et
            LEFT JOIN ss_emp_archive ea ON ea.company_id = et.company_id AND et.employee_id = ea.employee_id AND ea.is_active = 1 AND ((
                ea.archive_status!=3 AND et.emp_archive_id IS NULL) OR et.emp_archive_id = ea.emp_archive_id)
            LEFT JOIN emp_employee e on e.employee_id = et.employee_id
            LEFT JOIN ss_account_com_relation sacr ON sacr.company_id = et.company_id AND sacr.is_active = 1
            LEFT JOIN ss_com_account sca ON sca.com_account_id = sacr.com_account_id AND sca.is_active =1
            WHERE 1 = 1
            and et.emp_task_id = #{empTaskId}
    </select>
    <!--雇员查询 select-->
    <sql id="queryEmployee_select">
        sea.emp_archive_id,
            emp.employee_id,
            emp.employee_name,
            emp.id_num,
            sca.ss_account,
            sea.archive_task_status,
            sca.ss_account_type,
            sca.settlement_area,
            sc.company_id,
            sc.title,
            sac.service_center,
            sca.com_account_name,
            sca.ss_pwd,
            sea.start_month,
            sea.end_month,
            sea.ss_month,
            sea.in_date,afemp.leadership_name,if(afemp.status=3,1,0) as 'hasOut'
    </sql>
    <!--雇员查询 where-->
    <sql id="queryEmployee_where">
        <if test="archiveTaskStatus != null">
            AND sea.archive_task_status = #{archiveTaskStatus}
        </if>
        <if test="title != null">
            AND sc.title LIKE CONCAT('%',#{title}, '%')
        </if>
        <if test="companyId != null">
            AND sc.company_id = #{companyId}
        </if>
        <if test="empClassify != null">
            AND sea.emp_classify = #{empClassify}
        </if>
        <if test="employeeName != null">
            AND emp.employee_name  LIKE CONCAT('%',#{employeeName}, '%')
        </if>
        <if test="employeeId != null">
            AND emp.employee_id = #{employeeId}
        </if>
        <if test="leaderShipName !=null">
            AND afemp.leadership_name LIKE CONCAT('%',#{leaderShipName}, '%')
        </if>
        <if test="idNum != null">
            AND emp.id_num = #{idNum}
        </if>
        <if test="settlementArea != null">
            AND sca.settlement_area LIKE CONCAT('%',#{settlementArea}, '%')
        </if>
        <if test="ssAccount != null">
            AND sca.ss_account = #{ssAccount}
        </if>
        <if test="ssAccountType != null">
            AND sca.ss_account_type = #{ssAccountType}
        </if>
        <if test="serviceCenterValue != null">
            AND sac.service_center_id = #{serviceCenterValue}
        </if>
        <if test="ssSerial != null">
            AND sea.ss_serial = #{ssSerial}
        </if>
    </sql>
    <!--雇员查询-->
    <select id="queryEmployee" resultMap="BaseResultMapDTO">
        SELECT
        <include refid="queryEmployee_select"/>
        FROM emp_af_emp_company afemp
        INNER JOIN sal_af_company sac ON sac.company_id=afemp.company_id
        INNER JOIN sal_company sc ON sc.company_id=afemp.company_id
        INNER JOIN emp_employee emp ON emp.employee_id =afemp.employee_id
        LEFT JOIN ss_emp_archive sea on afemp.employee_id=sea.employee_id AND afemp.company_id=sea.company_id AND afemp.in_date=sea.in_date AND sea.is_active = 1
        LEFT JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active = 1

        <where>
            afemp.is_active = 1
            <include refid="queryEmployee_where"/>
        </where>
        <if test="orderParam != null">
          ORDER BY
            ${orderParam}
        </if>
    </select>

    <!-- 雇员查询导出结果 -->
    <resultMap id="RM_empSSSearchExportOpt" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.custom.empSSSearchExportOpt">
        <result column="emp_archive_id" property="empArchiveId"/>
        <result column="employee_id" property="employeeId"/>
        <result column="employee_name" property="employeeName"/>
        <result column="id_num" property="idNum"/>
        <result column="ss_account" property="ssAccount"/>
        <result column="archive_task_status" property="archiveTaskStatus"/>
        <result column="ss_account_type" property="ssAccountType"/>
        <result column="settlement_area" property="settlementArea"/>
        <result column="company_id" property="companyId"/>
        <result column="title" property="title"/>
        <result column="com_account_name" property="comAccountName"/>
        <result column="start_month" property="startMonth"/>
        <result column="end_month" property="endMonth"/>
        <result column="ss_month" property="ssMonth"/>
        <result column="in_date" property="inDate"/>
        <result column="service_center" property="serviceCenter"/>

    </resultMap>

    <!--雇员查询导出。这里为何导出要单独查询？原因是查询返回的bean 对象不一样，empSSSearchExportOpt 是带@excle。 最终要合并成一条查询语句  -->
    <select id="empSSSearchExport" resultMap="RM_empSSSearchExportOpt">
        SELECT
        <include refid="queryEmployee_select"/>
        FROM emp_af_emp_company afemp
        INNER JOIN sal_af_company sac ON sac.company_id=afemp.company_id
        INNER JOIN sal_company sc ON sc.company_id=afemp.company_id
        INNER JOIN emp_employee emp ON emp.employee_id =afemp.employee_id
        LEFT JOIN ss_emp_archive sea on afemp.employee_id=sea.employee_id AND afemp.company_id=sea.company_id AND afemp.in_date=sea.in_date AND sea.is_active = 1
        LEFT JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active = 1
        <where>
            afemp.is_active = 1
            <include refid="queryEmployee_where"/>
        </where>
    </select>

    <select id="queryEmployeeDetailInfo" resultMap="BaseResultMapDTO">
        SELECT
        sea.emp_archive_id,
        sc.company_id,
        sc.title,
        emp.employee_id,
        emp.employee_name,
        emp.id_num,
        sea.in_date,
        sea.ss_serial,
        sea.archive_task_status,
        sca.ss_account,
        sca.ss_account_type,
        sca.ss_pwd,
        sca.settlement_area,
        sac.service_center,
        sea.emp_classify,
        sea.com_account_id,
        afemp.leadership_name,afemp.labor_start_date,afemp.labor_end_date,afemp.status AS 'afempStatus',afemp.modified_time AS 'outOperateDate',
        sea.out_date,sea.end_month,sea.ss_month
        FROM ss_emp_archive sea
        LEFT JOIN sal_company sc ON sc.company_id=sea.company_id AND sc.is_active = 1
        LEFT JOIN sal_af_company sac ON sac.company_id=sea.company_id
        LEFT JOIN emp_employee emp ON emp.employee_id =sea.employee_id
        LEFT JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active =1
        LEFT JOIN emp_af_emp_company afemp on afemp.employee_id=sea.employee_id AND afemp.company_id=sea.company_id AND afemp.in_date=sea.in_date
        WHERE  sea.is_active = 1
        AND emp_archive_id = #{empArchiveId}
    </select>
    <select id="queryEmployeeDetailInfoByComEmp"  resultMap="BaseResultMapDTO" >
        SELECT
        sea.emp_archive_id,
        sc.company_id,
        sc.title,
        emp.employee_id,
        emp.employee_name,
        emp.id_num,
        afemp.in_date,
        sea.ss_serial,
        sca.ss_account,
        sca.ss_account_type,
        sea.emp_classify,
        sea.com_account_id,
        sea.archive_task_status,
        sea.ss_month,
        afemp.leadership_name,afemp.labor_start_date,afemp.labor_end_date,afemp.status AS 'afempStatus',afemp.modified_time AS 'outOperateDate',
        sca.ss_account,
        sca.com_account_name,
        sca.ss_pwd,
        sca.settlement_area,
        sac.service_center,
        afemp.out_date,sea.end_month
        FROM emp_af_emp_company afemp
        INNER JOIN sal_af_company sac ON sac.company_id=afemp.company_id
        INNER JOIN sal_company sc ON sc.company_id=afemp.company_id
        INNER JOIN emp_employee emp ON emp.employee_id =afemp.employee_id
        LEFT JOIN ss_emp_archive sea on afemp.employee_id=sea.employee_id AND afemp.company_id=sea.company_id AND afemp.in_date=sea.in_date AND sea.is_active = 1
        LEFT JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active = 1
        WHERE  afemp.is_active = 1
        AND afemp.company_id = #{companyId}
        AND afemp.employee_id = #{employeeId}
        ORDER  BY afemp.emp_company_id DESC LIMIT 1
    </select>

    <!--检查雇员社保序号是否重复-->
    <select id="checkSerialDuplicate" resultType="Integer">
        SELECT count(1) FROM ss_emp_archive ea WHERE ea.emp_archive_id!=${empArchiveId}
        AND ea.com_account_id=#{comAccountId} AND ea.ss_serial=#{ssSerial}
    </select>


    <!--检查雇员社保序号是否重复-->
    <select id="checkSerial" resultType="Integer">
        SELECT
            count(EA.emp_archive_id)
        FROM
            ss_emp_archive EA
        WHERE
            EA.is_active = 1
            AND EA.com_account_id = #{comAccountId}
            AND EA.ss_serial = #{ssSerial}
            AND EA.employee_id != #{employeeId}
    </select>

    <select id="getSsEmpInfo" resultMap="getSsEmpInfoResultMap">
        SELECT
        sea.employee_id,
        sea.company_id,
        smc.ss_month_belong,
        smc.ss_month,
        SUM(smci.emp_amount) AS emp_amount,
        smci.ss_type,
        smci.ss_type_name
        FROM
        ss_month_charge smc
        INNER JOIN ss_month_charge_item smci
        ON smci.month_charge_id = smc.month_charge_id
        INNER JOIN ss_emp_archive sea
        ON sea.emp_archive_id = smc.emp_archive_id
        WHERE smc.is_active = 1
          AND smci.is_active = 1
          AND sea.is_active = 1
          AND smc.employee_id = #{employeeId}
          AND sea.company_id = #{companyId}
          AND smc.ss_month_belong = #{ssMonthBelong}
        GROUP BY smci.ss_type
    </select>

    <resultMap id="ssEmpInfoRM" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsEmpInfoBO" >
        <result column="employee_id" property="employeeId"/>
        <result column="company_id" property="companyId"/>
        <result column="archive_status" property="archiveStatus"/>
        <result column="archiveStatusName" property="archiveStatusName"/>
    </resultMap>
    <!--获取雇员社保信息 API调用-->
    <select id="getSsEmpInfoById" resultMap="ssEmpInfoRM">
      SELECT
           ea.employee_id,
            ea.company_id,
            ea.archive_status,
           CASE ea.archive_status WHEN 0 THEN '未办理'
            WHEN 1 THEN '已办'
            WHEN 2 THEN '已做'
            WHEN 3 THEN '封存'
           END AS 'archiveStatusName'
        FROM
            ss_emp_archive ea
        WHERE
            ea.is_active = 1
            AND ea.company_id = #{companyId}
            AND ea.employee_id = #{employeeId}
            ORDER BY ea.in_date DESC LIMIT 1
    </select>

    <select id="getSsEmployee" resultMap="BaseResultMapDTO">
      SELECT
          ea.employee_id,
          ea.company_id,
          ea.com_account_id,
          ee.id_num
      FROM ss_emp_archive ea INNER JOIN emp_employee ee ON ea.employee_id = ee.employee_id
      WHERE ea.is_active = 1 AND ee.is_active = 1
            AND ea.company_id = #{companyId}
            AND ea.employee_id = #{employeeId}
            ORDER BY ea.created_time DESC LIMIT 1
    </select>

    <select id="ssExpEmpRegisterFormPrint" resultType="java.util.Map">
        SELECT emp.employee_name,CONCAT(emp.id_num,'                  ') as idNumber,
        CASE
        WHEN ea.emp_classify = 1 THEN '本市'
        WHEN ea.emp_classify = 5 OR ea.emp_classify = 6 OR ea.emp_classify = 7 THEN ''
        ELSE '外省市'
        END householdCityType ,
        CASE
        WHEN empaf.resident_type = 1 THEN '城镇' ELSE '非城镇'
        END
        as householdType,empaf.residence_address,
        empaf.address as contactAddress ,emp.province_code,emp.city_code,empaf.residence_address,
        empaf.resident_area,empaf.resident_street householdStreet ,empaf.resident_way householdRoad ,empaf.resident_village householdLane ,empaf.resident_card householdNumber ,empaf.resident_room householdRoom,empaf.zip_code,
        empaf.telephone ,empaf.mobile,
        CASE
        WHEN empaf.education_status =1 THEN '文盲或半文盲'
        WHEN empaf.education_status =2 THEN '小学'
        WHEN empaf.education_status =3 THEN '初中'
        WHEN empaf.education_status =4 THEN '技校'
        WHEN empaf.education_status =5 THEN '中专'
        WHEN empaf.education_status =6 THEN '高中'
        WHEN empaf.education_status =7 THEN '大专'
        WHEN empaf.education_status =8 THEN '大学'
        WHEN empaf.education_status =9 THEN '本科'
        WHEN empaf.education_status =10 THEN '硕士'
        WHEN empaf.education_status =11 THEN '博士'
        END AS education_status,
        CASE
        WHEN empaf.policy=0 THEN '团员'
        WHEN empaf.policy=1 THEN '党员'
        WHEN empaf.policy=2 THEN '群众'
        WHEN empaf.policy=3 THEN '明主党派'
        END AS politicsStatus,
        ea.ss_serial as serialNumber ,ea.start_month as paymentBegin,
        (select base_amount from ss_emp_base_period WHERE emp_archive_id=ea.emp_archive_id and is_active=1 ORDER BY start_month LIMIT 1)as paymentBase
        FROM ss_emp_archive ea
        INNER JOIN ss_emp_task et ON ea.emp_archive_id=et.emp_archive_id
        INNER JOIN emp_employee emp ON emp.employee_id=ea.employee_id
        INNER JOIN emp_af_employee empaf ON empaf.employee_id=emp.employee_id
      <where>
          <if test="companyId != null">
              and et.company_id=#{companyId}
          </if>
          <if test="employeeId != null">
              and et.employee_id=#{employeeId}
          </if>
          ORDER BY et.is_change DESC
          LIMIT 1
      </where>
    </select>
    <select id="ssExpChangeItemDeclarationFormPrint" resultType="java.util.HashMap">
        SELECT '在职' as status,ca.com_account_name,CONCAT(ca.ss_account,'        ') as ss_account,
        ea.ss_serial as serialNumber ,emp.employee_name as displayName,emp.id_num as idNumber,
        CASE
        WHEN et.task_category = 1 THEN '转入'
        WHEN et.task_category = 2 THEN '转入'
        WHEN et.task_category = 12 THEN '转入'
        WHEN et.task_category = 13 THEN '转入'
        WHEN et.task_category = 3 THEN '其他'
        WHEN et.task_category = 4 THEN '补缴'
        WHEN et.task_category = 5 THEN '转出'
        WHEN et.task_category = 14 THEN '转出'
        WHEN et.task_category = 6 THEN '封存'
        WHEN et.task_category = 15 THEN '封存'
        ELSE '其他'
        END  as epsProject ,
        CASE
        WHEN
        et.task_category = 3 THEN
        (SELECT CONCAT(min(mc.ss_month_belong) ,'-',max(mc.ss_month_belong)) from ss_month_charge mc where mc.is_active=1 AND mc.emp_task_id=et.emp_task_id)
        ELSE
        CONCAT(et.start_month , '-' , et.end_month)
        END AS paymentBegin,
        (select base_amount from ss_emp_base_period WHERE emp_archive_id=ea.emp_archive_id and is_active=1 ORDER BY start_month DESC LIMIT 1)income,
        CASE
        WHEN ea.emp_classify=1 THEN '上海人'
        WHEN ea.emp_classify=2 THEN '外来城镇人员'
        WHEN ea.emp_classify=3 THEN '外籍三险'
        WHEN ea.emp_classify=4 THEN '外籍五险'
        WHEN ea.emp_classify=5 THEN '非全日制仅工伤'
        WHEN ea.emp_classify=6 THEN '柔性退休'
        WHEN ea.emp_classify=7 THEN '工伤仅医疗'
        WHEN ea.emp_classify=8 THEN '外籍互免'
        END as remark
        FROM ss_emp_task et
        INNER JOIN ss_emp_archive ea ON ea.emp_archive_id=et.emp_archive_id
        INNER JOIN emp_employee emp ON emp.employee_id=ea.employee_id
        INNER JOIN emp_af_employee empaf ON empaf.employee_id=emp.employee_id
        INNER JOIN ss_com_account ca ON ca.com_account_id=ea.com_account_id
        <where>
            et.task_category IN(1,2,3,4,5,6,12,13,14,15)
            AND ea.archive_status = 1
            AND EXISTS (SELECT  1 FROM ss_month_charge mc WHERE mc.is_active = 1 AND  mc.emp_task_id=et.emp_task_id AND  mc.emp_archive_id=ea.emp_archive_id and mc.employee_id=et.employee_id )
            <if test="ssAccount != null">
                and ca.ss_account=#{ssAccount}
            </if>
            <if test="companyId != null">
                and et.company_id=#{companyId}
            </if>
            <if test="employeeId != null">
                and et.employee_id=#{employeeId}
            </if>
            <if test="ssSerialBegin != null">
                and ea.ss_serial>=#{ssSerialBegin}
            </if>
            <if test="ssSerialEnd != null">
                and ea.ss_serial <![CDATA[ <= ]]> #{ssSerialEnd}
            </if>
            <if test="archiveTaskStatus != null">
                and ea.archive_task_status = #{archiveTaskStatus}
            </if>
        </where>
        ORDER BY case
        when et.task_category = 12 OR et.task_category = 13 then 1
        when et.task_category = 14  then 5
        when et.task_category = 16  then 6
        else task_category end  ASC
    </select>

    <resultMap id="ApiEmpTaskArchiveRM" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.dto.SsEmpTaskArchiveDTO">

        <result column="emp_archive_id" property="empArchiveId" />
        <result column="company_id" property="companyId" />
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="id_num" property="idNum" />
        <result column="ss_serial" property="ssSerial" />
        <result column="emp_classify" property="empClassify" />
        <result column="archive_status" property="archiveStatus" />
        <result column="ss_month" property="ssMonth" />
    </resultMap>
    <select id="apiGetSsEmpArchiveByEmpCompanyId" resultMap="ApiEmpTaskArchiveRM">
    SELECT DISTINCT ea.emp_archive_id, ea.company_id,ea.employee_id,emp.employee_name,
    emp.id_num,ea.ss_serial,ea.emp_classify,ea.archive_status,
    ea.ss_month
    FROM ss_emp_archive ea
    INNER JOIN emp_employee emp ON emp.employee_id=ea.employee_id
    INNER JOIN ss_emp_task et ON et.emp_archive_id=ea.emp_archive_id
    WHERE
    et.is_active=1
    AND(
    et.business_interface_id=(select afea.emp_agreement_id from cmy_af_emp_agreement afea where afea.emp_company_id= #{empCompanyId})
    or
    et.old_agreement_id=(select afea.emp_agreement_id from cmy_af_emp_agreement afea where afea.emp_company_id= #{empCompanyId})
    )
    </select>
</mapper>
