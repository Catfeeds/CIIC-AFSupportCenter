<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.dao.SsMonthChargeMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.SsMonthCharge">
        <id column="month_charge_id" property="monthChargeId" />
        <result column="emp_task_id" property="empTaskId" />
        <result column="com_account_id" property="comAccountId" />
        <result column="ss_month_belong" property="ssMonthBelong" />
        <result column="ss_month" property="ssMonth" />
        <result column="employee_id" property="employeeId" />
        <result column="emp_archive_id" property="empArchiveId" />
        <result column="base_amount" property="baseAmount" />
        <result column="total_amount" property="totalAmount" />
        <result column="cost_category" property="costCategory" />
        <result column="emp_payment_status" property="empPaymentStatus" />
        <result column="is_active" property="isActive" />
        <result column="created_time" property="createdTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="created_by" property="createdBy" />
        <result column="modified_by" property="modifiedBy" />
    </resultMap>

    <resultMap id="ResultMap" extends="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsMonthChargeBO">
        <collection property="ssMonthChargeItemList" ofType="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.entity.SsMonthChargeItem">
            <id column="month_charge_item_id" property="monthChargeItemId" />
            <result column="ss_type" property="ssType" />
            <result column="ss_type_name" property="ssTypeName" />
            <result column="com_amount" property="comAmount" />
            <result column="emp_amount" property="empAmount" />
            <result column="sub_total_amount" property="subTotalAmount" />
            <result column="com_amount_orig" property="comAmountOrig" />
        </collection>
    </resultMap>

    <resultMap id="YysReportMap" type="com.ciicsh.gto.afsupportcenter.socialsecurity.socservice.bo.SsYysReportBO">
        <result column="com_account_name" property="comAccountName" />
        <result column="ss_account" property="ssAccount" />
        <result column="ss_pwd" property="ssPwd" />
        <result column="company_id" property="companyId" />
        <result column="service_center" property="serviceCenter" />
        <result column="ss_serial" property="ssSerial" />
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="base_amount" property="baseAmount" />
        <result column="category" property="category" />
        <result column="change_type_name" property="changeTypeName" />
        <result column="id_num" property="idNum" />
        <result column="settlement_area" property="settlementArea" />
        <result column="emp_classify" property="empClassify" />
        <result column="com_amount_pension" property="comAmountPension" />
        <result column="emp_amount_pension" property="empAmountPension" />
        <result column="one_payment_pension" property="onePaymentPension" />
        <result column="com_amount_medical" property="comAmountMedical" />
        <result column="emp_amount_medical" property="empAmountMedical" />
        <result column="com_amount_unemployment" property="comAmountUnemployment" />
        <result column="emp_amount_unemployment" property="empAmountUnemployment" />
        <result column="com_compensated_amount_pension" property="comCompensatedAmountPension" />
        <result column="emp_compensated_amount_pension" property="empCompensatedAmountPension" />
        <result column="com_compensated_amount_medical" property="comCompensatedAmountMedical" />
        <result column="emp_compensated_amount_medical" property="empCompensatedAmountMedical" />
        <result column="com_compensated_amount_unemployment" property="comCompensatedAmountUnemployment" />
        <result column="emp_compensated_amount_unemployment" property="empCompensatedAmountUnemployment" />
        <result column="gs_com_amount" property="gsComAmount" />
        <result column="sy_com_amount" property="syComAmount" />
        <result column="gs_com_repay_amount" property="gsComRepayAmount" />
        <result column="sy_com_repay_amount" property="syComRepayAmount" />
    </resultMap>

    <!--判断当月是否首次生成明细报表-->
    <select id="countIfMonthFirstReport" resultType="java.util.HashMap">
        SELECT count(1) AS count_mc FROM ss_month_charge mc
        WHERE mc.is_active=1
        AND mc.ss_month={#ssMonth}
        AND mc.com_account_id={#comAccountId}
    </select>
    <!--判断是否有新的任务单-->
    <select id="selectIfNewEmpTask" resultType="java.util.HashMap">
        <![CDATA[
            SELECT et.*
            FROM ss_emp_task et
            LEFT JOIN ss_emp_archive ea ON ea.emp_archive_id=et.emp_archive_id
            WHERE et.is_active=1
            AND et.handle_month={#ssMonth}
            AND ea.com_account_id={#comAccountId}
            AND EXISTS(
            SELECT 1 from (
            select MAX(mc.created_time) created_time FROM ss_month_charge mc
            WHERE mc.is_active=1
            AND mc.ss_month={#ssMonth}
            AND mc.com_account_id={#comAccountId})t WHERE t.created_time < = et.created_time
            )
        ]]>
    </select>
    <!--逻辑删除，按月份按企业社保账户，删除险种-->
    <update id="updateMonthChargeItemDel">
    UPDATE ss_month_charge_item mri set is_active=0 where
    EXISTS (select 1 from ss_month_charge mr where mr.month_charge_id=mri.month_charge_id and com_account_id={#comAccountId} and ss_month={#ssMonth} and emp_archive_id='')
    </update>
    <!--逻辑删除，按月份按企业社保账户，删除雇员-->
    <update id="updateMonthChargeDel">
    UPDATE ss_month_charge set is_active=0 WHERE and com_account_id={#comAccountId} and ss_month={#comAccountId} and emp_archive_id=''
    </update>

    <!--标准：按月查询标准数据,查询雇员费用段-->
    <select id="selectStandardEmpPeriod" resultType="java.util.HashMap">
        <![CDATA[
            SELECT ebp.*
            FROM ss_emp_base_period ebp
            LEFT JOIN ss_emp_archive ea on ea.emp_archive_id=ebp.emp_archive_id and ea.com_account_id='客户社保账户ID'
            WHERE
            ebp.is_active=1
            AND {#ssMonth} BETWEEN ebp.start_month and ebp.end_month
            AND ebp.ss_month <> {#ssMonth}
            AND ebp.ss_month_stop <> {#ssMonth}
        ]]>
    </select>
    <!--非标：按月查询标准数据,查询雇员费用段，变更类型：新进 转入 补缴-->
    <select id="selectNonStandardTaskCategory124">
        select ebd.*,ebp.base_amount from
        ss_emp_base_detail ebd
        left join ss_emp_base_period ebp on ebd.emp_base_period_id=ebp.emp_base_period_id and ebp.is_active=1
        left join ss_emp_archive ea on ea.emp_archive_id=ebp.emp_archive_id and ea.com_account_id={#comAccountId}
        left join ss_emp_task et on ebp.emp_task_id=et.emp_task_id and et.is_active=1
        where
        et.task_category in(1,2,4)
        and et.handle_month = {#ssMonth}
        and ebp.ss_month ={#ssMonth}
    </select>
    <!-- 删除当月 某月 非标数据-->
    <update id="deleteOldDate">
        UPDATE ss_month_charge SET is_active = #{isActive}, modified_time = NOW(), modified_by = #{modifiedBy}
        WHERE employee_id=#{employeeId} AND ss_month_belong =#{paymentMonth} AND ss_month =#{handleMonth} AND cost_category =#{costCategory}
    </update>
    <select id="selectOldDate" resultMap="BaseResultMap">
       SELECT * FROM ss_month_charge WHERE employee_id=#{employeeId} AND ss_month_belong =#{paymentMonth} AND ss_month =#{handleMonth} AND cost_category =#{costCategory}
    </select>

    <!--查询总额 之前做了相减 则当月已办肯定没有-->
    <select id="selectTotalFromOld" resultMap="ResultMap">
        SELECT
        smc.month_charge_id,
        smc.total_amount,
        smc.ss_month_belong,
        smc.ss_month,
        smci.month_charge_item_id,
        smci.com_amount,
        smci.emp_amount,
        smci.sub_total_amount,
        smci.com_amount_orig,
        smci.ss_type,
        smci.ss_type_name
        FROM
        ss_month_charge  smc
        JOIN ss_month_charge_item smci ON smc.month_charge_id = smci.month_charge_id AND smci.is_active=1
        WHERE smc.employee_id =#{employeeId}
        AND smc.ss_month_belong=#{paymentMonth}
         AND smc.is_active=1
         AND smc.cost_category = #{costCategory}
    </select>

    <select id="queryYysReport" resultMap="YysReportMap">
        SELECT
          tmp.com_account_name, tmp.ss_account, tmp.ss_pwd, tmp.company_id, tmp.service_center, tmp.ss_serial,
          tmp.employee_id, tmp.employee_name, tmp.base_amount, tmp.category,tmp.id_num,tmp.settlement_area,
          CASE tmp.emp_classify
            WHEN 1 THEN '上海人'
            WHEN 2 THEN '外来城镇人员'
            WHEN 3 THEN '外籍三险'
            WHEN 4 THEN '外籍五险'
            WHEN 5 THEN '非全日制仅工伤'
            WHEN 6 THEN '柔性退休'
            WHEN 7 THEN '工伤仅医疗'
            WHEN 8 THEN '外籍互免'
          END AS emp_classify,
          CASE tmp.category
          WHEN 1 THEN '标准'
          WHEN 2 THEN '新进'
          WHEN 3 THEN '转入'
          WHEN 4 THEN '补缴'
          WHEN 5 THEN '调整'
          WHEN 6 THEN '转出'
          WHEN 7 THEN '封存'
          ELSE '逆调' END AS change_type_name,
          SUM(tmp.pension_com_amount) AS com_amount_pension,
          SUM(tmp.pension_emp_amount) AS emp_amount_pension,
          0.00 AS one_payment_pension,
          SUM(tmp.medical_com_amount) AS com_amount_medical,
          SUM(tmp.medical_emp_amount) AS emp_amount_medical,
          SUM(tmp.unemployment_com_amount) AS com_amount_unemployment,
          SUM(tmp.unemployment_emp_amount) AS emp_amount_unemployment,
          SUM(tmp.pension_com_repay_amount) AS com_compensated_amount_pension,
          SUM(tmp.pension_emp_repay_amount) AS emp_compensated_amount_pension,
          SUM(tmp.medical_com_repay_amount) AS com_compensated_amount_medical,
          SUM(tmp.medical_emp_repay_amount) AS emp_compensated_amount_medical,
        SUM(tmp.gs_com_amount) AS gs_com_amount,
        SUM(tmp.sy_com_amount) AS sy_com_amount,
        SUM(tmp.gs_com_repay_amount) AS gs_com_repay_amount,
        SUM(tmp.sy_com_repay_amount) AS sy_com_repay_amount,
          SUM(tmp.unemployment_com_repay_amount) AS com_compensated_amount_unemployment,
          SUM(tmp.unemployment_emp_repay_amount) AS emp_compensated_amount_unemployment
        FROM (
              SELECT
                a.com_account_id,
                sca.com_account_name,
                sca.ss_account,
                sca.settlement_area,
                sca.ss_pwd,
                sea.company_id,
                sea.ss_serial,
                sea.service_center,
                sea.emp_classify,
                a.ss_month,
                a.employee_id,
                ee.employee_name,
                ee.id_num,
                a.base_amount,
                a.cost_category AS category,
                b.ss_type,
                0 AS pension_com_amount,
                0 AS pension_emp_amount,
                0 AS medical_com_amount,
                0 AS medical_emp_amount,
                0 AS gs_com_amount,
                0 AS sy_com_amount,
                0 AS unemployment_com_amount,
                0 AS unemployment_emp_amount,
                CASE WHEN b.ss_type = 'DIT00042' THEN SUM(b.com_amount) END AS pension_com_repay_amount,
                CASE WHEN b.ss_type = 'DIT00042' THEN SUM(b.emp_amount) END AS pension_emp_repay_amount,
                CASE WHEN b.ss_type = 'DIT00043' THEN SUM(b.com_amount) END AS medical_com_repay_amount,
                CASE WHEN b.ss_type = 'DIT00043' THEN SUM(b.emp_amount) END AS medical_emp_repay_amount,
                CASE WHEN b.ss_type = 'DIT00044' THEN SUM(b.com_amount) END AS gs_com_repay_amount,
                CASE WHEN b.ss_type = 'DIT00045' THEN SUM(b.com_amount) END AS sy_com_repay_amount,
                CASE WHEN b.ss_type = 'DIT00046' THEN SUM(b.com_amount) END AS unemployment_com_repay_amount,
                CASE WHEN b.ss_type = 'DIT00046' THEN SUM(b.emp_amount) END AS unemployment_emp_repay_amount
              FROM ss_month_charge a INNER JOIN ss_month_charge_item b ON a.month_charge_id = b.month_charge_id
              INNER JOIN ss_com_account sca ON a.com_account_id = sca.com_account_id AND sca.is_active = 1
              INNER JOIN ss_emp_archive sea ON a.com_account_id = sea.com_account_id AND a.employee_id = sea.employee_id AND a.emp_archive_id = sea.emp_archive_id AND sea.is_active = 1
              INNER JOIN emp_employee ee ON a.employee_id = ee.employee_id AND ee.is_active = 1
              WHERE a.is_active = 1
                AND b.is_active = 1
                AND a.cost_category != 1
                AND a.cost_category != 8
                <if test="ssAccountType != null">
                    AND sca.ss_account_type = #{ssAccountType}
                </if>
                <if test="ssAccount != null">
                    AND sca.ss_account LIKE CONCAT('%', #{ssAccount}, '%')
                </if>
                <if test="companyId != null">
                    AND sea.company_id LIKE CONCAT('%', #{companyId}, '%')
                </if>
                AND a.ss_month = #{ssMonth}
                AND b.ss_type IN ('DIT00042', 'DIT00043','DIT00044', 'DIT00045', 'DIT00046')
                AND (a.cost_category = 4 OR a.cost_category = 9)
              GROUP BY a.com_account_id, a.employee_id, a.cost_category, b.ss_type
              UNION ALL
              SELECT
                a.com_account_id,
                sca.com_account_name,
                sca.ss_account,
                sca.settlement_area,
                sca.ss_pwd,
                sea.company_id,
                sea.ss_serial,
                sea.service_center,
                sea.emp_classify,
                a.ss_month,
                a.employee_id,
                ee.employee_name,
                ee.id_num,
                a.base_amount,
                a.cost_category AS category,
                b.ss_type,
                CASE WHEN b.ss_type = 'DIT00042' THEN SUM(b.com_amount) END AS pension_com_amount,
                CASE WHEN b.ss_type = 'DIT00042' THEN SUM(b.emp_amount) END AS pension_emp_amount,
                CASE WHEN b.ss_type = 'DIT00043' THEN SUM(b.com_amount) END AS medical_com_amount,
                CASE WHEN b.ss_type = 'DIT00043' THEN SUM(b.emp_amount) END AS medical_emp_amount,
                CASE WHEN b.ss_type = 'DIT00044' THEN SUM(b.com_amount) END AS gs_com_amount,
                CASE WHEN b.ss_type = 'DIT00045' THEN SUM(b.com_amount) END AS sy_com_amount,
                CASE WHEN b.ss_type = 'DIT00046' THEN SUM(b.com_amount) END AS unemployment_com_amount,
                CASE WHEN b.ss_type = 'DIT00046' THEN SUM(b.emp_amount) END AS unemployment_emp_amount,
                0 AS pension_com_repay_amount,
                0 AS pension_emp_repay_amount,
                0 AS medical_com_repay_amount,
                0 AS medical_emp_repay_amount,
                0 AS gs_com_repay_amount,
                0 AS sy_com_repay_amount,
                0 AS unemployment_com_repay_amount,
                0 AS unemployment_emp_repay_amount
              FROM ss_month_charge a INNER JOIN ss_month_charge_item b ON a.month_charge_id = b.month_charge_id
              INNER JOIN ss_com_account sca ON a.com_account_id = sca.com_account_id AND sca.is_active = 1
              INNER JOIN ss_emp_archive sea ON a.com_account_id = sea.com_account_id AND a.employee_id = sea.employee_id AND a.emp_archive_id = sea.emp_archive_id AND sea.is_active = 1
              INNER JOIN emp_employee ee ON a.employee_id = ee.employee_id AND ee.is_active = 1
              WHERE a.is_active = 1
                AND b.is_active = 1
                AND a.cost_category != 1
                AND a.cost_category != 8
                <if test="ssAccountType != null">
                    AND sca.ss_account_type = #{ssAccountType}
                </if>
                <if test="ssAccount != null">
                    AND sca.ss_account LIKE CONCAT('%', #{ssAccount}, '%')
                </if>
                <if test="companyId != null">
                    AND sea.company_id LIKE CONCAT('%', #{companyId}, '%')
                </if>
                AND a.ss_month = #{ssMonth}
                AND b.ss_type IN ('DIT00042', 'DIT00043', 'DIT00044', 'DIT00045', 'DIT00046')
                AND a.cost_category != 4 AND a.cost_category != 9
              GROUP BY a.com_account_id, a.employee_id, a.cost_category, b.ss_type
        ) tmp
        GROUP BY tmp.com_account_name, tmp.ss_account, tmp.company_id, tmp.service_center, tmp.ss_serial, tmp.employee_id, tmp.employee_name, tmp.base_amount, tmp.category, change_type_name,tmp.id_num,tmp.settlement_area,tmp.emp_classify
        ORDER BY tmp.ss_account, tmp.company_id, tmp.ss_serial
    </select>

    <select id="getSocialSecurityChangeInformation" resultMap="BaseResultMap">
        SELECT
        smc.base_amount,
        smc.ss_month,
        smc.cost_category
        FROM ss_month_charge smc
        INNER JOIN ss_emp_archive sea ON smc.emp_archive_id = sea.emp_archive_id
        <where>
            smc.is_active = 1 AND sea.is_active = 1
            AND smc.cost_category != 1
            AND LEFT(smc.ss_month_belong, 4) = #{year}
            AND sea.company_id = #{companyId}
            AND smc.employee_id = #{employeeId}
        </where>
        ORDER BY sea.company_id,smc.employee_id,smc.ss_month,smc.ss_month_belong
    </select>
</mapper>
