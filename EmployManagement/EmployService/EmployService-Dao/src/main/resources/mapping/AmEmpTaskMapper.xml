<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.dao.AmEmpTaskMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.entity.AmEmpTask">
        <id column="emp_task_id" property="empTaskId" />
        <result column="employee_id" property="employeeId" />
        <result column="company_id" property="companyId" />
        <result column="task_category" property="taskCategory" />
        <result column="submitter_id" property="submitterId" />
        <result column="submitter_dept_id" property="submitterDeptId" />
        <result column="submit_time" property="submitTime" />
        <result column="submitter_remark" property="submitterRemark" />
        <result column="task_status" property="taskStatus" />
        <result column="handle_user_id" property="handleUserId" />
        <result column="handle_time" property="handleTime" />
        <result column="handle_remark" property="handleRemark" />
        <result column="rejection_remark" property="rejectionRemark" />
        <result column="task_id" property="taskId" />
        <result column="task_form_content" property="taskFormContent" />
        <result column="employee_nature" property="employeeNature" />
        <result column="archive_direction" property="archiveDirection" />
        <result column="business_interface_id" property="businessInterfaceId" />
        <result column="out_reason" property="outReason" />
        <result column="out_reason_code" property="outReasonCode" />
        <result column="out_date" property="outDate" />
        <result column="employ_property" property="employProperty" />
        <result column="employ_code" property="employCode" />
        <result column="is_active" property="isActive" />
        <result column="created_time" property="createdTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="created_by" property="createdBy" />
        <result column="modified_by" property="modifiedBy" />
        <result column="emp_company_id" property="empCompanyId" />
        <result column="change_company" property="changeCompany" />
        <result column="is_finish" property="isFinish" />
        <result column="hire_task_id" property="hireTaskId"/>
        <result column="is_cancel" property="isCancel"/>
	</resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMapDTO" extends="BaseResultMap"
               type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.bo.AmEmpTaskBO">
        <result column="employ_style" property="employStyle" />
        <result column="handle_type" property="handleType" />
        <result column="employ_property" property="employProperty" />
        <result column="employ_way" property="employWay" />
        <result column="yuliu_doc_type" property="yuliuDocType" />
        <result column="yuliu_doc_num" property="yuliuDocNum" />
        <result column="doc_type" property="docType" />
        <result column="doc_num" property="docNum" />
        <result column="title" property="title" />
        <result column="employee_name" property="employeeName"/>
        <result column="id_num" property="idNum"/>
        <result column="service_center" property="serviceCenter"/>
        <result column="custom" property="custom"/>
        <result column="employ_date" property="employDate" />
        <result column="resign_date" property="resignDate" />
        <result column="ss_pwd" property="ssPwd"/>
        <result column="ukey" property="ukey"/>
        <result column="accout_modified" property="accoutModified"/>
        <result column="settlement_area" property="settlementArea"/>
        <result column="ss_account" property="ssAccount"/>
        <result column="labor_start_date" property="laborStartDate"/>
        <result column="labor_end_date" property="laborEndDate"/>
        <result column="open_af_date" property="openAfDate"/>
        <result column="employ_operate_man" property="employOperateMan"/>
        <result column="company_type" property="companyType"/>

    </resultMap>

    <resultMap id="RM_empSearchExportOpt" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.custom.employSearchExportOpt">
        <result column="employee_id" property="employeeId" />
        <result column="employ_style" property="employStyle" />
        <result column="handle_type" property="handleType" />
        <result column="employ_property" property="employProperty" />
        <result column="employ_way" property="employWay" />
        <result column="yuliu_doc_num" property="yuliuDocNum" />
        <result column="doc_num" property="docNum" />
        <result column="title" property="title" />
        <result column="employee_name" property="employeeName"/>
        <result column="id_num" property="idNum"/>
        <result column="service_center" property="serviceCenter"/>
        <result column="diaodang_feedback_opt_date" property="diaodangFeedbackOptDate" />
    </resultMap>

    <resultMap id="BaseResultMapEmploymentDTO" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.api.dto.EmploymentDTO">

    </resultMap>

    <resultMap id="BaseResultMapArchiveDTO" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.api.dto.ArchiveDTO">

    </resultMap>

    <resultMap id="BaseResultMapResignLinkDTO" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.api.dto.ResignFeedbackDTO">

    </resultMap>

    <resultMap id="BaseResultMapResignDTO" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.api.dto.ResignDTO">

    </resultMap>

    <resultMap id="BaseResultMapNatureDTO" type="com.ciicsh.gto.afsupportcenter.employmanagement.employservice.bo.EmployeeBO">
        <result column="person_nature" property="personNature" />
        <result column="archive_direction" property="archiveDirection" />
    </resultMap>

    <select id="queryAmEmpTask" resultMap="BaseResultMapDTO">
        SELECT DISTINCT
        a.emp_task_id,
        /*任务id */
        a.employee_id,
        /*雇员id */
        a.company_id,
        /*客户Id*/
        a.employee_nature,
        a.archive_direction,
        a.employ_code,
        a.change_company,
        a.created_time,
        a.job,
        b.employment_id,
        b.employ_way,
        /*用工方式 */
        a.employ_property,
        /*用工属性 */
        b.employ_date,
        b.handle_type,
        b.open_af_date,
        b.employ_operate_man,
        b.employ_style,
        e.labor_start_date,
        e.labor_end_date,
        e.position,
        e.company_type,
        c.yuliu_doc_type,
        c.yuliu_doc_num,
        /*预留档案编号 */
        c.doc_type,
        c.doc_num,
        /*档案编号 */
        c.diaodang_feedback,
        /*调档反馈 */
        c.employ_feedback_opt_date,
        /*用工反馈操作日期 */
        c.diaodang_feedback_opt_date,
        /*调档反馈操作日期 */
        d.employee_name,
        /*雇员姓名 */
        d.id_num,
        /*证件号 */
        d.id_card_type,
        cs.employ_special,
        sal.title,
        /*公司名称 */
        h.service_center,
        /*服务中心 */
        h.leader_ship_name,
        /*客服经理*/
        e.settlement_area,
        w.out_reason
        FROM
        am_emp_task a
        LEFT JOIN am_employment b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN emp_employee d ON a.employee_id = d.employee_id
        LEFT JOIN am_emp_custom h ON h.emp_task_id = a.emp_task_id
        LEFT JOIN am_emp_employee e ON e.emp_task_id = a.emp_task_id
        LEFT JOIN am_archive c ON b.employment_id = c.employment_id
        LEFT JOIN sal_company sal ON a.company_id = sal.company_id
        LEFT JOIN am_company_set cs ON cs.company_id = a.company_id
        LEFT JOIN am_resign f ON f.employment_id = b.employment_id
        LEFT JOIN am_emp_task w ON f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        where   a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        <if test="taskStatus!=null and taskStatusOther==null">
            and a.task_status = ${taskStatus}
        </if>
        <if test="taskStatusOther!=null">
            and a.task_status not in ('1','3','4','5','11')
        </if>
        <if test="job!=null">
            and a.job = #{job}
        </if>
        <foreach collection="param" item="plid" open="" close="" separator="">
            and  ${plid}
        </foreach>
        <if test="isGroupCom!=null">
            group by a.company_id
        </if>
        order by
        <foreach collection="orderParam" item="plid" open="" close="" separator="">
            ${plid},
        </foreach>

        a.created_time desc
    </select>

    <select id="queryAmEmpTaskCompanys" resultType="java.lang.String">
        SELECT
        DISTINCT
        a.company_id/*公司名称 */
        FROM
        am_emp_task a
        LEFT JOIN
        am_employment b
        ON  a.emp_task_id = b.emp_task_id
        LEFT JOIN
        emp_employee d
        on  a.employee_id = d.employee_id
        LEFT JOIN
        am_emp_custom h on h.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_emp_employee  e on e.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_archive c
        ON b.employment_id = c.employment_id
        LEFT JOIN
        am_company_set cs
        on cs.company_id = a.company_id
        LEFT JOIN am_resign f ON f.employment_id = b.employment_id
        LEFT JOIN am_emp_task w on f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        LEFT JOIN sal_company sal ON a.company_id = sal.company_id
        where   a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        <if test="taskStatus!=null">
            and a.task_status = ${taskStatus}
        </if>
        <foreach collection="param" item="plid" open="" close="" separator="">
            and  ${plid}
        </foreach>
        group by h.title
        order by a.created_time desc
    </select>

    <select id="taskCount"  resultMap="BaseResultMapDTO">
        SELECT
        t.task_status,
        COUNT(*) AS count
        FROM
        (
        SELECT
        DISTINCT         a.emp_task_id,
        a.employee_id,
        a.company_id,
        a.employee_nature,
        a.archive_direction,
        a.employ_code,
        a.change_company,
        a.created_time,
        a.job,
        a.task_status,
        b.employment_id,
        b.employ_way,
        b.employ_property,
        b.employ_date,
        b.employ_style,
        b.handle_type,
        e.labor_start_date,
        e.labor_end_date,
        e.position,
        c.yuliu_doc_type,
        c.yuliu_doc_num,
        c.doc_type,
        c.doc_num,
        c.diaodang_feedback,
        c.employ_feedback_opt_date,
        c.diaodang_feedback_opt_date,
        d.employee_name,
        d.id_num,
        d.id_card_type,
        cs.employ_special,
        sal.title,
        h.service_center,
        h.leader_ship_name,
        e.settlement_area,
        w.out_reason
        FROM
        am_emp_task a
        LEFT JOIN
        am_employment b
        ON  a.emp_task_id = b.emp_task_id
        LEFT JOIN
        emp_employee d
        on  a.employee_id = d.employee_id
        LEFT JOIN
        am_emp_custom h
        on h.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_emp_employee  e
        on e.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_archive c
        ON b.employment_id = c.employment_id
        LEFT JOIN sal_company sal ON a.company_id = sal.company_id
        LEFT JOIN
        am_company_set cs
        on cs.company_id = a.company_id
        LEFT JOIN
        am_resign f
        ON f.employment_id = b.employment_id
        LEFT JOIN
        am_emp_task w
        on f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        where
        a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        <if test="job!=null">
            and a.job = #{job}
        </if>
        <foreach collection = "param" item = "plid"  open=""  close=""  separator="" >
            AND  ${ plid }
        </foreach >
        )  t
        GROUP BY
        t.task_status
    </select>

    <select id="queryAmEmploymentById" resultMap="BaseResultMapDTO">
        SELECT
        a.emp_task_id,/*任务id */
        a.employee_id,/*雇员id */
        b.employ_way,/*用工方式 */
        b.employ_property,/*用工属性 */
        c.yuliu_doc_num,/*预留档案编号 */
        c.doc_num,/*档案编号 */
        c.diaodang_feedback,/*调档反馈 */
        c.employ_feedback_opt_date,/*用工反馈操作日期 */
        c.diaodang_feedback_opt_date,/*调档反馈操作日期 */
        d.employee_name,/*雇员姓名 */
        d.id_num,/*证件号 */
        e.title,/*公司名称 */
        e.license_code
        FROM
        am_emp_task a
        LEFT JOIN
        am_employment b
        ON a.employee_id = b.employee_id
        LEFT JOIN
        am_archive c
        ON b.employment_id = c.employment_id
        LEFT JOIN
        emp_employee  d
        on  b.employee_id = d.employee_id
        LEFT JOIN
        sal_company e
        on e.company_id = b.company_id
        LEFT JOIN
        am_resign f
        on a.employee_id = f.employee_id
        where
        task_category = '1'
        and
        b.employee_id = #{employeeId}
        AND
        b.company_id = #{companyId}
    </select>

    <select id="queryAccout" resultMap="BaseResultMapDTO">
        SELECT
        a.ss_pwd,
        a.ss_username ukey,
        a.modified_time accout_modified,
        a.settlement_area,
        a.ss_account
        FROM
        ss_com_account a
        INNER JOIN ss_account_com_relation b ON a.com_account_id = b.account_com_relation_id
        WHERE
        b.company_id = #{companyId}
        and
        a.is_active = 1
    </select>

    <select id="selectEmployId" resultMap="BaseResultMapDTO">

        SELECT  employee_id,company_id from emp_af_emp_company where emp_company_id = #{empCompanyId}

    </select>

    <select id="queryEmpTask" resultMap="BaseResultMapDTO">
        SELECT
        a.*
        FROM
        am_emp_task a
        where
        task_category = '1'
        and
        a.employee_id = #{employeeId}
        and
        a.company_id = #{companyId}
        order by a.created_time desc
    </select>

    <update id="updateTaskStatus">
        UPDATE am_emp_task set task_status = 6 where emp_task_id = (SELECT a.emp_task_id from am_employment a where  a.employment_id = #{employmentId}  )
    </update>

    <select id="queryAmEmpTaskList" resultMap="RM_empSearchExportOpt">
        SELECT DISTINCT
        a.emp_task_id,
        /*任务id */
        a.employee_id,
        /*雇员id */
        a.company_id,
        /*客户Id*/
        a.employee_nature,
        a.archive_direction,
        a.employ_code,
        a.change_company,
        a.created_time,
        a.job,
        b.employment_id,
        b.employ_way,
        /*用工方式 */
        a.employ_property,
        /*用工属性 */
        b.employ_date,
        b.open_af_date,
        b.employ_operate_man,
        e.labor_start_date,
        e.labor_end_date,
        e.position,
        e.company_type,
        c.yuliu_doc_type,
        c.yuliu_doc_num,
        /*预留档案编号 */
        c.doc_type,
        c.doc_num,
        /*档案编号 */
        c.diaodang_feedback,
        /*调档反馈 */
        c.employ_feedback_opt_date,
        /*用工反馈操作日期 */
        c.diaodang_feedback_opt_date,
        /*调档反馈操作日期 */
        d.employee_name,
        /*雇员姓名 */
        d.id_num,
        /*证件号 */
        d.id_card_type,
        cs.employ_special,
        sal.title,
        /*公司名称 */
        h.service_center,
        /*服务中心 */
        h.leader_ship_name,
        /*客服经理*/
        e.settlement_area,
        w.out_reason
        FROM
        am_emp_task a
        LEFT JOIN am_employment b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN emp_employee d ON a.employee_id = d.employee_id
        LEFT JOIN am_emp_custom h ON h.emp_task_id = a.emp_task_id
        LEFT JOIN am_emp_employee e ON e.emp_task_id = a.emp_task_id
        LEFT JOIN am_archive c ON b.employment_id = c.employment_id
        LEFT JOIN sal_company sal ON a.company_id = sal.company_id
        LEFT JOIN am_company_set cs ON cs.company_id = a.company_id
        LEFT JOIN am_resign f ON f.employment_id = b.employment_id
        LEFT JOIN am_emp_task w ON f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        where   a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        <if test="taskStatus!=null and taskStatusOther==null">
            and a.task_status = ${taskStatus}
        </if>
        <if test="taskStatusOther!=null">
            and a.task_status not in ('1','3','4','5','11')
        </if>
        <if test="job!=null">
            and a.job = #{job}
        </if>
        <foreach collection="param" item="plid" open="" close="" separator="">
            and  ${plid}
        </foreach>
        order by
        <foreach collection="orderParam" item="plid" open="" close="" separator="">
            ${plid},
        </foreach>

        a.created_time desc
    </select>

    <select id="querySocial" resultMap="BaseResultMapDTO">
        select ca.ss_account,ca.settlement_area,ca.modified_time as accountRepairDate,ca.ss_pwd
        FROM ss_com_account ca
        LEFT JOIN ss_account_com_relation acr on acr.com_account_id=ca.com_account_id
        where 1=1
        <if test="companyId!=null">
            and  acr.company_id=#{companyId}
        </if>
    </select>
    <select id="querySocialCi" resultMap="BaseResultMapDTO">
        select ca.ss_account,ca.settlement_area,ca.modified_time as accountRepairDate,ca.ss_pwd
        FROM ss_com_account ca where ca.is_active=1 and ca.ss_account_type=1
    </select>


    <select id="getEmploymentByTaskId" resultMap="BaseResultMapEmploymentDTO">
        SELECT
        a.employ_date,
        a.open_af_date,
        a.employ_style,
        a.handle_type,
        c.employ_feedback,
        c.employ_feedback_opt_date,
        a.employ_operate_man,
        d.labor_start_date,
        a.employ_property
        FROM
        am_employment a
        LEFT JOIN  am_emp_task b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN  am_archive c on a.employment_id = c.employment_id
        LEFT JOIN am_emp_employee d ON d.emp_task_id = b.emp_task_id
        where
        b.task_id = #{taskId}
    </select>

    <select id="getArchiveByEmployeeId" resultMap="BaseResultMapArchiveDTO">
        SELECT
        a.doc_num,
        a.archive_place,
        a.archive_card_state,
        a.doc_from,
        a.storage_date,
        a.archive_place_additional,
        a.employ_doc_payment_to,
        a.doc_code,
        a.hukou_code,
        a.diaodang_feedback,
        a.yuliu_doc_num,
        a.luyong_handle_end
        FROM
        am_archive a
        LEFT JOIN am_employment b on a.employment_id = b.employment_id
        LEFT JOIN am_emp_task c on c.emp_task_id = b.emp_task_id
        where
        <if test="empCompanyId!=null and empCompanyId!=''">
            c.emp_company_id = #{empCompanyId}
        </if>
        <if test="taskId!=null and taskId!=''">
            c.task_id = #{taskId}
        </if>
        order by
        a.created_time desc
    </select>

    <select id="getArchiveByTaskId" resultMap="BaseResultMapArchiveDTO">
        SELECT
        a.doc_num,
        a.archive_place,
        a.archive_card_state,
        a.doc_from,
        a.storage_date,
        a.archive_place_additional,
        a.employ_doc_payment_to,
        a.doc_code,
        a.hukou_code,
        a.diaodang_feedback,
        a.yuliu_doc_num,
        a.luyong_handle_end
        FROM
        am_archive a
        LEFT JOIN am_employment b on a.employment_id = b.employment_id
        LEFT JOIN am_emp_task c on c.emp_task_id = b.emp_task_id
        where
        c.emp_task_id = #{empTaskId}
        order by
        a.created_time desc
    </select>

    <select id="getResignArchiveByTaskId" resultMap="BaseResultMapArchiveDTO">
        SELECT
        a.doc_num,
        a.archive_place,
        a.archive_card_state,
        a.doc_from,
        a.storage_date,
        a.archive_place_additional,
        a.employ_doc_payment_to,
        a.doc_code,
        a.hukou_code,
        a.diaodang_feedback,
        a.yuliu_doc_num,
        a.luyong_handle_end
        from am_emp_task b
        LEFT JOIN  am_resign r on b.emp_task_id = r.emp_task_id
        LEFT JOIN  am_archive a on a.employment_id = r.employment_id
        where
        b.task_category = '2'
        and b.emp_task_id = #{empTaskId}
        order by
        a.created_time desc
    </select>

    <select id="queryResignLinkByTaskId" resultMap="BaseResultMapResignLinkDTO">
        SELECT  resign_feedback,created_by as resign_operate_man,created_time from am_resign_link where task_id = #{taskId}
    </select>

    <select id="queryResignByTaskId" resultMap="BaseResultMapResignDTO">
        SELECT
        b.out_date as resign_date,
        a.return_doc_direct,
        a.return_doc_date,
        a.cache_date,
        a.transfer_way,
        a.transfer_remark,
        a.job_centre_feedback_date,
        a.resign_material_delivery_date,
        a.resign_operate_man,
        a.resign_feedback,
        c.resign_return_date,
        c.post_letter_date
        FROM
        am_resign a
        LEFT JOIN am_emp_task b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN am_archive c  on  c.employment_id = a.employment_id
        where
        b.task_id = #{taskId}
    </select>

    <select id="queryResignByEmpTaskId" resultMap="BaseResultMapResignDTO">
        SELECT
        b.out_date as resign_date,
        a.return_doc_direct,
        a.return_doc_date,
        a.cache_date,
        a.transfer_way,
        a.transfer_remark,
        a.job_centre_feedback_date,
        a.resign_material_delivery_date,
        a.resign_operate_man,
        a.resign_feedback,
        c.resign_return_date,
        c.post_letter_date
        FROM
        am_resign a
        LEFT JOIN am_emp_task b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN am_archive c  on  c.employment_id = a.employment_id
        where
        b.emp_task_id = #{empTaskId}
    </select>

    <select id="queryNature" resultMap="BaseResultMapNatureDTO">
        SELECT  person_nature  from emp_person_nature where id = #{id}
    </select>

    <select id="queryArchiveDriection" resultMap="BaseResultMapNatureDTO">
        SELECT  archive_direction from  emp_archive_direction  where id = #{id}
    </select>

    <select id="queryIsFinish" resultMap="BaseResultMapDTO">
        SELECT  emp_task_id  FROM  am_emp_task
        where
        is_finish = 1 and
        <foreach collection="empTaskIds" item="item" open="emp_task_id IN (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryChange" resultMap="BaseResultMapDTO">
        SELECT  emp_task_id  from  am_emp_task
        where
         change_company = '是' and
        <foreach collection="empTaskIds" item="item" open="emp_task_id IN (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryIsMaterial" resultMap="BaseResultMapDTO">
        SELECT  emp_task_id,hire_task_id,employee_id  from am_emp_task
        where
        <foreach collection="empTaskIds" item="item" open="emp_task_id IN (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryByTaskId" resultMap="BaseResultMapDTO">
        SELECT emp_task_id,task_id,business_interface_id from am_emp_task where task_id = #{taskId}
    </select>

    <select id="jobCount"  resultMap="BaseResultMapDTO">
        SELECT
        COUNT(t.job) as count
        FROM
        (
        SELECT
        DISTINCT         a.emp_task_id,
        a.employee_id,
        a.company_id,
        a.employee_nature,
        a.archive_direction,
        a.employ_code,
        a.change_company,
        a.created_time,
        a.job,
        a.task_status,
        b.employment_id,
        b.employ_way,
        b.employ_property,
        b.employ_date,
        b.employ_style,
        b.handle_type,
        e.labor_start_date,
        e.labor_end_date,
        e.position,
        c.yuliu_doc_type,
        c.yuliu_doc_num,
        c.doc_type,
        c.doc_num,
        c.diaodang_feedback,
        c.employ_feedback_opt_date,
        c.diaodang_feedback_opt_date,
        d.employee_name,
        d.id_num,
        d.id_card_type,
        cs.employ_special,
        sal.title,
        h.service_center,
        h.leader_ship_name,
        e.settlement_area,
        w.out_reason
        FROM
        am_emp_task a
        LEFT JOIN
        am_employment b
        ON  a.emp_task_id = b.emp_task_id
        LEFT JOIN
        emp_employee d
        on  a.employee_id = d.employee_id
        LEFT JOIN
        am_emp_custom h
        on h.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_emp_employee  e
        on e.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_archive c
        ON b.employment_id = c.employment_id
        LEFT JOIN sal_company sal ON a.company_id = sal.company_id
        LEFT JOIN
        am_company_set cs
        on cs.company_id = a.company_id
        LEFT JOIN
        am_resign f
        ON f.employment_id = b.employment_id
        LEFT JOIN
        am_emp_task w
        on f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        where
        a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        and  a.job = #{job}
        <foreach collection = "param" item = "plid"  open=""  close=""  separator="" >
            AND  ${ plid }
        </foreach >
        )  t
    </select>

    <select id="jobCount"  resultMap="BaseResultMapDTO">
        SELECT
        COUNT(t.job) as count
        FROM
        (
        SELECT
        DISTINCT         a.emp_task_id,
        a.employee_id,
        a.company_id,
        a.employee_nature,
        a.archive_direction,
        a.employ_code,
        a.change_company,
        a.created_time,
        a.job,
        a.task_status,
        b.employment_id,
        b.employ_way,
        b.employ_property,
        b.employ_date,
        b.employ_style,
        b.handle_type,
        e.labor_start_date,
        e.labor_end_date,
        e.position,
        c.yuliu_doc_type,
        c.yuliu_doc_num,
        c.doc_type,
        c.doc_num,
        c.diaodang_feedback,
        c.employ_feedback_opt_date,
        c.diaodang_feedback_opt_date,
        d.employee_name,
        d.id_num,
        d.id_card_type,
        cs.employ_special,
        sal.title,
        h.service_center,
        h.leader_ship_name,
        e.settlement_area,
        w.out_reason
        FROM
        am_emp_task a
        LEFT JOIN
        am_employment b
        ON  a.emp_task_id = b.emp_task_id
        LEFT JOIN
        emp_employee d
        on  a.employee_id = d.employee_id
        LEFT JOIN
        am_emp_custom h
        on h.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_emp_employee  e
        on e.emp_task_id = a.emp_task_id
        LEFT JOIN
        am_archive c
        ON b.employment_id = c.employment_id
        LEFT JOIN sal_company sal
        ON a.company_id = sal.company_id
        LEFT JOIN
        am_company_set cs
        on cs.company_id = a.company_id
        LEFT JOIN
        am_resign f
        ON f.employment_id = b.employment_id
        LEFT JOIN
        am_emp_task w
        on f.emp_task_id = w.emp_task_id
        <if test="material!=null">
            LEFT JOIN am_emp_material m  on m.emp_task_id = a.emp_task_id
        </if>
        where
        a.task_category = '1'
        and  a.employee_id is not null
        and  a.company_id  is not null
        and  a.job = #{job}
        <foreach collection = "param" item = "plid"  open=""  close=""  separator="" >
            AND  ${ plid }
        </foreach >
        )  t
    </select>

    <select id="queryByEmpCompanyId" resultMap="BaseResultMapDTO">
        SELECT  *  from am_emp_task  where
        task_category = #{task_category}
        and
        emp_company_id = #{empCompanyId}
        order by
        created_time desc
    </select>

    <select id="getEmploymentByEmpTaskId" resultMap="BaseResultMapEmploymentDTO">
        SELECT
        a.employ_date,
        a.open_af_date,
        a.employ_style,
        a.handle_type,
        c.employ_feedback,
        c.employ_feedback_opt_date,
        a.employ_operate_man,
        d.labor_start_date,
        a.employ_property
        FROM
        am_employment a
        LEFT JOIN  am_emp_task b ON a.emp_task_id = b.emp_task_id
        LEFT JOIN  am_archive c on a.employment_id = c.employment_id
        LEFT JOIN am_emp_employee d ON d.emp_task_id = b.emp_task_id
        where
        b.emp_task_id = #{empTaskId}
    </select>

</mapper>
