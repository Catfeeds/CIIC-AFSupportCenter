app:
  id: 10006010
endpoints:
  shutdown:
    enabled: true
    sensitive: false
eureka:
  client:
    registerWithEureka: false
    serviceUrl:
      defaultZone: http://172.16.9.56:9602/eureka
  instance:
    lease-renewal-interval-in-seconds: 40
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
management:
  context-path: /admin
  port: 6020
  security:
    enabled: false


mybatis-plus:
  configuration:
    cache-enabled: false
    map-underscore-to-camel-case: true
  global-config:
    id-type: 1
    db-column-underline: true
    field-strategy: 2
    refresh-mapper: true
    logic-delete-value: 0
    logic-not-delete-value: 1
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.ciicsh.gto.afsupportcenter.flexiblebenefit.customer.po

server:
  port: 6019
  session:
    timeout: 300
  tomcat:
    background-processor-delay: 30
    basedir: /tmp
    max-threads: 0
    protocol-header: x-forwarded-proto
    remote-ip-header: x-forwarded-for
spring:
  application:
    name: afsupportcenter-center-command-service
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    tomcat:
      initial-size: 10
      max-active: 20
      max-idle: 8
      min-idle: 8
    password: ciicit!#%
    url: jdbc:mysql://172.16.9.53:3306/gtobusinessdb?characterEncoding=utf8&useSSL=true
    username: root
  cloud:
    stream:
      kafka:
        binder:
          brokers: 172.16.9.55:9092
          zk-nodes: 172.16.9.55:2181,172.16.9.56:2181,172.16.9.57:2181
      bindings:
        taskService-employeeEntry-useWorker-channel:
          destination: taskService-employeeEntry-useWorker # topic name
          group: ${spring.application.name}
          content-type: application/json
          consumer:
            partitioned: true
        taskService-employeeEntry-socialSecurity-channel:
          destination: taskService-employeeEntry-socialSecurity # topic name
          group: ${spring.application.name}
          content-type: application/json
          consumer:
            partitioned: true
        taskService-employeeEntry-contract-channel:
          destination: taskService-employeeEntry-contract # topic name
          group: ${spring.application.name}
          content-type: application/json
          consumer:
            partitioned: true
      instance-count: 2
      instance-index: 0
  jpa:
    database: MYSQL
    hibernate:
      ddl-auto: update
    show-sql: true
  http:
    multipart:
      enabled: true
      max-file-size: 2MB