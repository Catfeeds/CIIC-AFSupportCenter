<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.socjob.dao.SsPaymentComMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.socjob.entity.SsPaymentCom">
		<id column="payment_com_id" property="paymentComId" />
		<result column="payment_id" property="paymentId" />
		<result column="com_account_id" property="comAccountId" />
		<result column="company_id" property="companyId" />
		<result column="payment_month" property="paymentMonth" />
		<result column="ought_amount" property="oughtAmount" />
		<result column="total_pay_amount" property="totalPayAmount" />
		<result column="total_com_pay_amount" property="totalComPayAmount" />
		<result column="total_emp_pay_amount" property="totalEmpPayAmount" />
		<result column="refund_deducted" property="refundDeducted" />
		<result column="adjust_deducted" property="adjustDeducted" />
		<result column="extra_amount" property="extraAmount" />
		<result column="join_payment_user" property="joinPaymentUser" />
		<result column="join_payment_date" property="joinPaymentDate" />
		<result column="if_deducted_into_pay" property="ifDeductedIntoPay" />
		<result column="remark" property="remark" />
		<result column="actual_payment_date" property="actualPaymentDate" />
		<result column="emp_count" property="empCount" />
		<result column="payment_state" property="paymentState" />
		<result column="is_active" property="isActive" />
		<result column="created_time" property="createdTime" />
		<result column="modified_time" property="modifiedTime" />
		<result column="created_by" property="createdBy" />
		<result column="modified_by" property="modifiedBy" />
	</resultMap>



    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMapExt" type="com.ciicsh.gto.afsupportcenter.socjob.entity.bo.SsPaymentComBO">
        <result column="company_id" property="companyId"/>
        <result column="payment_com_id" property="paymentComId"/>
        <result column="com_account_id" property="comAccountId"/>
        <result column="payment_way" property="paymentWay"/>
    </resultMap>

    <!--查询未支付客户-->
    <select id="getPaymentComList" resultMap="BaseResultMapExt">
        SELECT pc.company_id,pc.payment_com_id,ca.com_account_id,ca.payment_way
        FROM ss_payment_com pc
        LEFT JOIN ss_com_account ca ON ca.com_account_id=pc.com_account_id
        WHERE pc.is_active=1
        AND pc.payment_month=#{payemntMonth}
        AND pc.payment_state=1
    </select>

    <!--按照财务服务契约（每日按雇员询问财务是否可付）提供雇员级名单。is_company_enjoy_advance=1 就是垫付  -->
    <!--财务中心要求同一个雇员同一个月份的金额相加（正数+负数金额）大于零的雇员-->
    <select id="getSsPaymentEmpList" resultType="com.ciicsh.gto.afsupportcenter.socjob.entity.bo.SsMonthChargeBO">
    SELECT mc.employee_id ,
            pc.company_id,
            mc.ss_month_belong pay_month,
            sum(mc.total_amount) pay_amount
            FROM ss_month_charge mc
            INNER JOIN ss_payment_com pc ON pc.com_account_id=mc.com_account_id
            WHERE pc.is_active=1
            AND mc.ss_month=#{ssMonth}
            AND pc.payment_com_id=#{paymentComId}
            group BY mc.employee_id ,
            pc.company_id ,
            mc.ss_month_belong
            HAVING sum(mc.total_amount)>0
    </select>
    <select id="getSsPaymentComIsCompanyEnjoyAdvance" resultType="com.ciicsh.gto.afsupportcenter.socjob.entity.bo.SsMonthChargeBO">
      select IF(ca.payment_way=3,'1','0') AS 'is_company_enjoy_advance'  from ss_payment_com pc LEFT JOIN  ss_com_account ca ON  ca.com_account_id=pc.com_account_id
      WHERE pc.is_active=1 AND pc.payment_com_id=#{paymentComId} limit 1
    </select>


    <!--根据接口返回的数据批量更新月度明细的支付状态-->
    <update id="updateSsMonthCharge" parameterType="java.util.HashMap">
         UPDATE ss_month_charge SET  emp_payment_status=#{empPaymentStatus}
        WHERE
        company_id=#{companyId}
        AND employee_id=#{employeeId}
        AND ss_month=#{ssMonth}
        AND ss_month_belong=#{ssMonthBelong}
    </update>

    <!--查询 客户下有多少可付或垫款可付的记录 1 来款可付 2 垫款可付  -->
    <select id="countBySsEmpPaymentStatus" resultType="java.lang.Integer">
        select count(1)
        from ss_month_charge smc
        where smc.is_active=1
        and ifnull(smc.emp_payment_status,0) = 0
        and smc.ss_month=#{ssMonth}
        AND EXISTS (
            select 1 from ss_payment_com pc
            where pc.com_account_id=smc.com_account_id
            and pc.payment_com_id=#{paymentComId}
            )
        and com_account_id=#{comAccountId}
        AND  EXISTS(
            SELECT mc.employee_id ,
            pc.company_id,
            mc.ss_month_belong pay_month,
            sum(mc.total_amount) pay_amount
            FROM ss_month_charge mc
            INNER JOIN ss_payment_com pc ON pc.com_account_id=mc.com_account_id
            WHERE pc.is_active=1
            AND mc.ss_month=#{ssMonth}
            AND pc.payment_com_id=#{paymentComId}
            AND mc.month_charge_id=smc.month_charge_id
            group BY mc.employee_id ,
            pc.company_id ,
            mc.ss_month_belong
            HAVING sum(mc.total_amount)>0
        )

    </select>

    <!--根据接口返回的数据批量更新客户的支付状态-->
    <update id="updateSsPaymentCom" parameterType="java.util.HashMap">
        UPDATE ss_payment_com SET
        payment_state=#{paymentState},modified_by=#{modifiedBy},modified_time=sysdate() where payment_com_id=#{paymentComId}
    </update>

    <select id="ifExistPayment" resultType="int">
      SELECT COUNT(*) FROM ss_payment_com WHERE com_account_id = #{comAccountId} AND payment_month = #{paymentMonth} AND is_active = 1
    </select>

    <update id="updateSsMonthChargeTotalAmount">
        <![CDATA[
        UPDATE ss_payment_com pc
        SET pc.total_com_pay_amount = (
            SELECT
            IFNULL(sum(mci.com_amount),0)
            FROM
            ss_month_charge_item mci
            INNER JOIN ss_month_charge mc ON mc.month_charge_id = mci.month_charge_id
            LEFT JOIN ss_emp_archive ea ON ea.emp_archive_id = mc.emp_archive_id
            WHERE
            mc.is_active = 1
            AND mci.is_active = 1
            AND ea.company_id = pc.company_id
            and mc.com_account_id=pc.com_account_id
            AND mci.com_amount>0
            AND mc.ss_month=#{paymentMonth}
        ),
        pc.total_emp_pay_amount = (
            SELECT
            IFNULL(sum(mci.emp_amount),0)
            FROM
            ss_month_charge_item mci
            INNER JOIN ss_month_charge mc ON mc.month_charge_id = mci.month_charge_id
            LEFT JOIN ss_emp_archive ea ON ea.emp_archive_id = mc.emp_archive_id
            WHERE
            mc.is_active = 1
            AND mci.is_active = 1
            AND ea.company_id = pc.company_id
            AND mc.com_account_id=pc.com_account_id
            AND mci.emp_amount>0
            AND mc.ss_month=#{paymentMonth}
        ),
        pc.ought_amount = pc.total_com_pay_amount + pc.total_emp_pay_amount,
        pc.total_pay_amount=pc.ought_amount,
        pc.refund_deducted=0,
        pc.adjust_deducted=(
            SELECT
            IFNULL(sum(mci.emp_amount + mci.com_amount),0)
            FROM
            ss_month_charge_item mci
            INNER JOIN ss_month_charge mc ON mc.month_charge_id = mci.month_charge_id
            LEFT JOIN ss_emp_archive ea ON ea.emp_archive_id = mc.emp_archive_id
            WHERE
            mc.is_active = 1
            AND mci.is_active = 1
            AND ea.company_id = pc.company_id
            AND mc.com_account_id=pc.com_account_id
            AND mci.emp_amount < 0
            AND mc.ss_month=#{paymentMonth}
        ),
        pc.emp_count=(
            SELECT
            IFNULL(sum(DISTINCT mc.emp_archive_id),0)
            FROM
            ss_month_charge mc
            LEFT JOIN ss_emp_archive ea ON ea.emp_archive_id = mc.emp_archive_id
            WHERE
            mc.is_active = 1
            AND ea.company_id = pc.company_id
            AND mc.com_account_id=pc.com_account_id
            AND mc.ss_month=#{paymentMonth}
        )
        WHERE
            pc.is_active = 1
            AND pc.payment_month = #{paymentMonth}
            AND pc.com_account_id=#{comAccountId}
          ]]>
    </update>
</mapper>
