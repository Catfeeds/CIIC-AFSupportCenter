<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.job.socjob.dao.SsAnnualAdjustEmployeeMapper">

    <sql id="queryAnnualAdjustEmployeeTemplate">
        SELECT
        sea.emp_archive_id,
        emp.employee_id,
        emp.employee_name,
        emp.id_num,
        sea.archive_status,
        sca.ss_account_type,
        sca.settlement_area,
		sca.ss_account,
		sca.ss_username,
		sca.ss_pwd,
        sc.company_id,
        sc.title,
        sea.salary,
		sea.ss_serial,
		sea.emp_classify,
        sebp.base_amount,
		sca.com_account_id
        FROM ss_emp_archive sea
        INNER JOIN sal_company sc ON sc.company_id=sea.company_id AND sc.is_active = 1
        INNER JOIN emp_employee emp ON emp.employee_id =sea.employee_id
        INNER JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active =1
        INNER JOIN ss_emp_base_period sebp ON sebp.emp_archive_id=sea.emp_archive_id AND sebp.is_active=1 AND sebp.end_month IS NULL
    </sql>

    <sql id="existsInAnnualAdjustTemplate">
        SELECT 1 FROM ss_annual_adjust_employee saae
        WHERE saae.employee_id=sea.employee_id
        AND saae.is_active=1
        AND sea.is_active=1
        AND saae.adjust_year=YEAR(NOW())
    </sql>

    <insert id="insertNotExistsData" parameterType="com.ciicsh.gto.afsupportcenter.job.socjob.dto.SsAnnualAdjustEmployeeDTO">
    INSERT INTO ss_annual_adjust_employee (
        adjust_year,emp_archive_id,employee_id,employee_name,id_num,
        archive_status,ss_account_type,settlement_area,ss_account,ss_username,
        ss_pwd,company_id,company_name,salary,ss_serial,
        emp_classify,base_amount,com_account_id,is_active,created_time,
        created_by,modified_time,modified_by)
    SELECT YEAR(NOW()),t.emp_archive_id,t.employee_id,t.employee_name,t.id_num,
        t.archive_status,t.ss_account_type,t.settlement_area,t.ss_account,t.ss_username,
		t.ss_pwd,t.company_id,t.title,t.salary,t.ss_serial,
        t.emp_classify,t.base_amount,t.com_account_id,1,NOW(),
        #{createBy},NOW(),#{createBy}
    FROM (
        <include refid="queryAnnualAdjustEmployeeTemplate"></include>
		where sea.is_active = 1 AND 2 >= sea.archive_status
        AND sea.company_id=#{companyId}
		AND NOT EXISTS (
            <include refid="existsInAnnualAdjustTemplate"></include>
            AND saae.company_id=#{companyId}
		)
		UNION ALL
        <include refid="queryAnnualAdjustEmployeeTemplate"></include>
		where sea.is_active = 1 AND sea.archive_status = 3 AND YEAR(sea.out_date) >= YEAR(NOW()) - 1
        AND sea.company_id=#{companyId}
		AND NOT EXISTS (
             <include refid="existsInAnnualAdjustTemplate"></include>
             AND saae.company_id=#{companyId}
		)
    ) t
    </insert>

    <update id="updateExistsData" parameterType="com.ciicsh.gto.afsupportcenter.job.socjob.dto.SsAnnualAdjustEmployeeDTO">
        UPDATE ss_annual_adjust_employee sade
        INNER JOIN ss_emp_archive sea ON sade.employee_id=sea.employee_id AND sade.is_active = 1
        INNER JOIN sal_company sc ON sc.company_id=sea.company_id AND sc.is_active = 1
        INNER JOIN emp_employee emp ON emp.employee_id=sea.employee_id
        INNER JOIN ss_com_account sca ON sca.com_account_id=sea.com_account_id AND sca.is_active =1
        INNER JOIN ss_emp_base_period sebp ON sebp.emp_archive_id=sea.emp_archive_id AND sebp.is_active=1 AND sebp.end_month IS NULL
        SET sade.salary=sea.salary,
        sade.modified_time=NOW(),
        sade.modified_by=#{modifiedBy}
        WHERE sea.is_active = 1
        <if test="isOut == null or isOut == false">
           AND 2 >= sea.archive_status
        </if>
        <if test="isOut == true">
            AND sea.archive_status = 3 AND YEAR(sea.out_date) >= YEAR(NOW()) - 1
        </if>
        AND sade.salary != sea.salary
        AND sade.adjust_year=YEAR(NOW())
        AND sade.company_id=#{companyId}
    </update>
</mapper>
