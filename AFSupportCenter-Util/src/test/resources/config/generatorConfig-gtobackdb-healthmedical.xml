<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <properties resource="gen-jdbc.properties"/>
    <!-- 数据库驱动包位置 -->
    <classPathEntry location="${classPathEntry}"/>

    <!-- HealthMedical -->
    <context id="DB2Tables" targetRuntime="MyBatis3" defaultModelType="flat"
             introspectedColumnImpl="${introspectedColumnImpl}">
        <plugin type="${plugin}">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
            <property name="caseSensitive" value="true"/>
            <property name="forceAnnotation" value="true"/>
        </plugin>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <commentGenerator type="">
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 数据库链接URL、用户名、密码 -->
        <jdbcConnection driverClass="${driverClassName}"
                        connectionURL="${url}"
                        userId="${username}"
                        password="${password}"/>
        <javaTypeResolver type="${javaTypeResolver}">
            <property name="forceBigDecimals" value="false"/>
            <property name="useJava8Time" value="true"/>
        </javaTypeResolver>
        <!-- 生成模型的包名和位置 -->
        <javaModelGenerator
                targetPackage="${package}.healthmedical.dao.model" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <!--
                设置一个根对象，
                如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项
                注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，
                包括：属性名相同，类型相同，有相同的getter/setter方法；
             -->
            <property name="rootClass" value="${rootClass}"/>
        </javaModelGenerator>
        <!-- 生成的映射文件包名和位置 -->
        <sqlMapGenerator
                targetPackage="${package}.healthmedical.dao.mapping" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成DAO的包名和位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="${package}.healthmedical.dao" targetProject="${projectPath}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 要生成那些表(更改tableName和domainObjectName就可以) -->
        <!--
            <table tableName="blog" domainObjectName="Blog" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
            enableSelectByExample="false" selectByExampleQueryId="false">

            sqlStatement:将返回新值的 SQL 语句。如果这是一个identity列，您可以使用其中一个预定义的的特殊值。预定义值如下：
            Cloudscape
            DB2
            DB2_MF
            Derby
            HSQLDB
            Informix
            MySql
            SqlServer
            SYBASE
            JDBC:这会配置MBG使用MyBatis3支持的JDBC标准的生成key来生成代码。 这是一个独立于数据库获取标识列中的值的方法。 重要: 只有当目标运行为MyBatis3时才会产生正确的代码。 如果与iBATIS2一起使用目标运行时会产生运行时错误的代码。
        -->
        <!--
            <table tableName="TB_POLICE_STATION" domainObjectName="DataAccess" enableCountByExample="false" enableUpdateByExample="false"
            enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <generatedKey column="id" sqlStatement="Mysql" identity="true" />
            </table>
        -->
        <table tableName="HM_Acceptance" domainObjectName="HM_Acceptance"
               enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="true"/>
            <generatedKey column="AcceptanceId" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>