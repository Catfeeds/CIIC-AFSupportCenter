<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.housefund.fundservice.dao.HfEmpTaskMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMapBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskExportBo">
		<result column="emp_task_id" property="empTaskId" />
		<result column="company_id" property="companyId" />
        <result column="company_name" property="companyName" />
		<result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="id_num" property="idNum" />
		<result column="hf_type" property="hfType" />
        <result column="hf_emp_account" property="hfEmpAccount" />
		<result column="task_category" property="taskCategory" />
		<result column="urgent" property="urgent" />
		<result column="submitter_id" property="submitterId" />
        <result column="submit_time" property="submitTime" />
		<result column="task_id" property="taskId" />
	</resultMap>

    <resultMap id="RejectResultMapBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskRejectExportBo" extends="BaseResultMapBo">
        <result column="modified_by" property="modifiedBy" />
        <result column="modified_time" property="modifiedTime" />
        <result column="rejection_remark" property="rejectionRemark" />
    </resultMap>

    <resultMap id="BaseResultHandleBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskHandleBo">
        <result column="emp_task_id" property="empTaskId" />
        <result column="emp_archive_id" property="empArchiveId" />
        <result column="hf_type" property="hfType" />
        <result column="task_category" property="taskCategory" />
        <result column="task_status" property="taskStatus" />
        <result column="company_id" property="companyId" />
        <result column="company_name" property="companyName" />
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="id_num" property="idNum" />
        <result column="payment_bank" property="paymentBank" />
        <result column="state" property="state" />
        <result column="payment_way" property="paymentWay" />
        <result column="ukey_store" property="ukeyStore" />
        <result column="com_account_id" property="comAccountId" />
        <result column="com_account_name" property="comAccountName" />
        <result column="basic_com_account_class_id" property="basicComAccountClassId" />
        <result column="added_com_account_class_id" property="addedComAccountClassId" />
        <result column="basic_com_task_status" property="basicComTaskStatus" />
        <result column="added_com_task_status" property="addedComTaskStatus" />
        <result column="hf_account_type" property="hfAccountType" />
        <result column="basic_hf_com_account" property="basicHfComAccount" />
        <result column="basic_com_hf_month" property="basicComHfMonth" />
        <result column="basic_end_month" property="basicEndMonth" />
        <result column="added_hf_com_account" property="addedHfComAccount" />
        <result column="added_com_hf_month" property="addedComHfMonth" />
        <result column="added_end_month" property="addedEndMonth" />
        <result column="in_date" property="inDate" />
        <result column="hf_emp_account" property="hfEmpAccount" />
        <result column="start_month" property="startMonth" />
        <result column="end_month" property="endMonth" />
        <result column="amount" property="amount" />
        <result column="emp_base" property="empBase" />
        <result column="ratio_com" property="ratioCom" />
        <result column="ratio_emp" property="ratioEmp" />
        <result column="basic_hf_emp_account" property="basicHfEmpAccount" />
        <result column="basic_emp_archive_id" property="basicEmpArchiveId" />
        <result column="basic_archive_status" property="basicArchiveStatus" />
        <result column="added_hf_emp_account" property="addedHfEmpAccount" />
        <result column="added_emp_archive_id" property="addedEmpArchiveId" />
        <result column="added_archive_status" property="addedArchiveStatus" />
        <result column="handle_remark" property="handleRemark" />
        <result column="rejection_remark" property="rejectionRemark" />
        <result column="operation_remind" property="operationRemind" />
        <result column="operation_remind_date" property="operationRemindDate" />
    </resultMap>

    <select id="queryHfEmpTaskReject" resultMap="RejectResultMapBo">
        SELECT
        het.emp_task_id,
        het.task_category,
        het.urgent,
        het.employee_id,
        ee.employee_name,
        ee.id_num,
        het.company_id,
        sc.title company_name,
        het.hf_type,
        het.hf_emp_account,
        het.submitter_id,
        het.submit_time,
        het.task_id,
        het.modified_by,
        het.modified_time,
        het.rejection_remark
        FROM hf_emp_task het
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        LEFT JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND hcas.hf_account_type = 3
        <if test="hfAccountType != null">
            AND hcas.hf_account_type = #{hfAccountType}
        </if>
        <if test="hfType != null">
            AND hcas.hf_type = #{hfType}
        </if>
        <if test="paymentBank != null">
            AND hcas.payment_bank = #{paymentBank}
        </if>
        <if test="hfComAccount != null">
            LEFT JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND hcac.hf_type = het.hf_type
            AND hcac.hf_com_account = #{hfComAccount}
        </if>
        <where>
            het.is_active = 1  AND IFNULL(het.task_status, 1) = 4 AND het.welfare_unit = 1
            <if test="exceptTaskCategories != null">
                AND het.task_category NOT IN (${exceptTaskCategories})
            </if>
            <if test="taskCategory != null">
                AND het.task_category = #{taskCategory}
            </if>
            <if test="employeeId != null">
                AND ee.employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
            </if>
            <if test="idNum != null">
                AND ee.id_num = #{idNum}
            </if>
            <if test="companyId != null">
                AND sc.company_id = #{companyId}
            </if>
            <if test="urgent == 1">
                AND het.urgent = #{urgent}
            </if>
            <if test="submitTimeStart != null">
                AND het.submit_time >= #{submitTimeStart}
            </if>
            <if test="submitTimeEnd != null">
                AND #{submitTimeEnd} >= het.submit_time
            </if>
            <if test="processStatus == 1">
                AND het.submit_time <![CDATA[ <= ]]>
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
            <if test="processStatus == 2">
                AND het.submit_time >
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
        </where>
        UNION ALL
        SELECT
        het.emp_task_id,
        het.task_category,
        het.urgent,
        het.employee_id,
        ee.employee_name,
        ee.id_num,
        het.company_id,
        sc.title company_name,
        het.hf_type,
        het.hf_emp_account,
        het.submitter_id,
        het.submit_time,
        het.task_id,
        het.modified_by,
        het.modified_time,
        het.rejection_remark
        FROM hf_emp_task het
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.is_active = 1 AND hcas.hf_account_type = 1
        <if test="hfAccountType != null">
            AND hcas.hf_account_type = #{hfAccountType}
        </if>
        <if test="hfType != null">
            AND hcas.hf_type = #{hfType}
        </if>
        <if test="paymentBank != null">
            AND hcas.payment_bank = #{paymentBank}
        </if>
        <if test="hfComAccount != null">
            LEFT JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND hcac.hf_type = het.hf_type
            AND hcac.hf_com_account = #{hfComAccount}
        </if>
        <where>
            het.is_active = 1  AND IFNULL(het.task_status, 1) = 4 AND het.welfare_unit = 2
            <if test="exceptTaskCategories != null">
                AND het.task_category NOT IN (${exceptTaskCategories})
            </if>
            <if test="taskCategory != null">
                AND het.task_category = #{taskCategory}
            </if>
            <if test="employeeId != null">
                AND ee.employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
            </if>
            <if test="idNum != null">
                AND ee.id_num = #{idNum}
            </if>
            <if test="companyId != null">
                AND sc.company_id = #{companyId}
            </if>
            <if test="urgent == 1">
                AND het.urgent = #{urgent}
            </if>
            <if test="submitTimeStart != null">
                AND het.submit_time >= #{submitTimeStart}
            </if>
            <if test="submitTimeEnd != null">
                AND #{submitTimeEnd} >= het.submit_time
            </if>
            <if test="processStatus == 1">
                AND het.submit_time <![CDATA[ <= ]]>
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
            <if test="processStatus == 2">
                AND het.submit_time >
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
        </where>
    </select>

    <select id="queryHfEmpTask" resultMap="BaseResultMapBo">
        SELECT
        het.emp_task_id,
        het.task_category,
        het.urgent,
        het.employee_id,
        ee.employee_name,
        ee.id_num,
        het.company_id,
        sc.title company_name,
        het.hf_type,
        het.hf_emp_account,
        het.submitter_id,
        het.submit_time,
        het.task_id
        FROM hf_emp_task het
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        LEFT JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND hcas.hf_account_type = 3
        <if test="hfAccountType != null">
            AND hcas.hf_account_type = #{hfAccountType}
        </if>
        <if test="hfType != null">
            AND hcas.hf_type = #{hfType}
        </if>
        <if test="paymentBank != null">
            AND hcas.payment_bank = #{paymentBank}
        </if>
        <if test="hfComAccount != null">
            LEFT JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND hcac.hf_type = het.hf_type
            AND hcac.hf_com_account = #{hfComAccount}
        </if>
        <where>
            het.is_active = 1  AND IFNULL(het.task_status, 1) != 5 AND het.welfare_unit = 1
            <if test="exceptTaskCategories != null">
                AND het.task_category NOT IN (${exceptTaskCategories})
            </if>
            <if test="taskCategory != null">
                AND het.task_category = #{taskCategory}
            </if>
            <if test="employeeId != null">
                AND ee.employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
            </if>
            <if test="idNum != null">
                AND ee.id_num = #{idNum}
            </if>
            <if test="companyId != null">
                AND sc.company_id = #{companyId}
            </if>
            <if test="urgent == 1">
                AND het.urgent = #{urgent}
            </if>
            <if test="submitTimeStart != null">
                AND het.submit_time >= #{submitTimeStart}
            </if>
            <if test="submitTimeEnd != null">
                AND #{submitTimeEnd} >= het.submit_time
            </if>
            <if test="taskStatus != null">
                AND IFNULL(het.task_status, 1) = #{taskStatus}
            </if>
            <if test="processStatus == 1">
                AND het.submit_time <![CDATA[ <= ]]>
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
            <if test="processStatus == 2">
                AND het.submit_time >
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
        </where>
        UNION ALL
        SELECT
        het.emp_task_id,
        het.task_category,
        het.urgent,
        het.employee_id,
        ee.employee_name,
        ee.id_num,
        het.company_id,
        sc.title company_name,
        het.hf_type,
        het.hf_emp_account,
        het.submitter_id,
        het.submit_time,
        het.task_id
        FROM hf_emp_task het
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.is_active = 1 AND hcas.hf_account_type = 1
        <if test="hfAccountType != null">
            AND hcas.hf_account_type = #{hfAccountType}
        </if>
        <if test="hfType != null">
            AND hcas.hf_type = #{hfType}
        </if>
        <if test="paymentBank != null">
            AND hcas.payment_bank = #{paymentBank}
        </if>
        <if test="hfComAccount != null">
            LEFT JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND hcac.hf_type = het.hf_type
            AND hcac.hf_com_account = #{hfComAccount}
        </if>
        <where>
            het.is_active = 1  AND IFNULL(het.task_status, 1) != 5 AND het.welfare_unit = 2
            <if test="exceptTaskCategories != null">
                AND het.task_category NOT IN (${exceptTaskCategories})
            </if>
            <if test="taskCategory != null">
                AND het.task_category = #{taskCategory}
            </if>
            <if test="employeeId != null">
                AND ee.employee_id = #{employeeId}
            </if>
            <if test="employeeName != null">
                AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
            </if>
            <if test="idNum != null">
                AND ee.id_num = #{idNum}
            </if>
            <if test="companyId != null">
                AND sc.company_id = #{companyId}
            </if>
            <if test="urgent == 1">
                AND het.urgent = #{urgent}
            </if>
            <if test="submitTimeStart != null">
                AND het.submit_time >= #{submitTimeStart}
            </if>
            <if test="submitTimeEnd != null">
                AND #{submitTimeEnd} >= het.submit_time
            </if>
            <if test="taskStatus != null">
                AND IFNULL(het.task_status, 1) = #{taskStatus}
            </if>
            <if test="processStatus == 1">
                AND het.submit_time <![CDATA[ <= ]]>
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
            <if test="processStatus == 2">
                AND het.submit_time >
                (
                SELECT CASE WHEN DAY(CURDATE()) > hca.close_day THEN
                CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hca.close_day)
                ELSE
                CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hca.close_day) END
                )
            </if>
        </where>
    </select>

    <select id="getEmpTaskHandleData" resultMap="BaseResultHandleBo">
        SELECT DISTINCT
        het.emp_task_id,
        het.emp_archive_id,
        het.hf_type,
        het.task_category,
        het.task_status,
        sc.company_id,
        sc.title AS company_name,
        hca.com_account_id,
        hca.payment_bank,
        hca.state,
        hca.payment_way,
        hca.ukey_store,
        IFNULL(hca.com_account_name, hctb.com_account_name) AS com_account_name,
        hcacb.com_account_class_id AS basic_com_account_class_id,
        hcaca.com_account_class_id AS added_com_account_class_id,
        CASE WHEN hcacb.com_account_class_id IS NOT NULL THEN 3 ELSE hctb.task_status END AS basic_com_task_status,
        CASE WHEN hcaca.com_account_class_id IS NOT NULL THEN 3 ELSE hcta.task_status END AS added_com_task_status,
        IFNULL(hca.hf_account_type, 3) AS hf_account_type,
        IFNULL(hcacb.hf_com_account, hctb.hf_com_account) AS basic_hf_com_account,
        IFNULL(hcacb.com_hf_month, CONVERT(hctb.com_start_month, SIGNED)) AS basic_com_hf_month,
        IFNULL(hcacb.end_month, hctb.end_month) AS basic_end_month,
        IFNULL(hcaca.hf_com_account, hcta.hf_com_account) AS added_hf_com_account,
        IFNULL(hcaca.com_hf_month, CONVERT(hcta.com_start_month, SIGNED)) AS added_com_hf_month,
        IFNULL(hcaca.end_month, hcta.end_month) AS added_end_month,
        ee.employee_id,
        ee.employee_name,
        ee.id_num,
        het.in_date,
        het.hf_emp_account,
        het.task_status,
        het.start_month,
        het.end_month,
        het.amount,
        het.emp_base,
        het.ratio_com,
        het.ratio_emp,
        het.emp_archive_id,
        heab.hf_emp_account AS basic_hf_emp_account,
        heab.emp_archive_id AS basic_emp_archive_id,
        heab.archive_status AS basic_archive_status,
        heaa.hf_emp_account AS added_hf_emp_account,
        heaa.emp_archive_id AS added_emp_archive_id,
        heaa.archive_status AS added_archive_status,
        het.handle_remark,
        het.rejection_remark,
        het.operation_remind,
        het.operation_remind_date
        FROM hf_emp_task het
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        LEFT JOIN
        (
        SELECT hcas.com_account_id,het.welfare_unit,hcas.payment_bank,hcas.state,hcas.payment_way,hcas.ukey_store,hcas.hf_account_type,hcas.com_account_name
        FROM hf_emp_task het
        LEFT JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND hcas.hf_account_type = 3
        WHERE het.is_active = 1 AND het.welfare_unit = 1 AND het.emp_task_id = #{empTaskId}
        UNION ALL
        SELECT hcas.com_account_id,2 AS welfare_unit,hcas.payment_bank,hcas.state,hcas.payment_way,hcas.ukey_store,hcas.hf_account_type,hcas.com_account_name
        FROM hf_com_account hcas
        LEFT JOIN hf_account_com_relation hacr ON hcas.com_account_id = hacr.com_account_id AND hacr.is_active = 1
        WHERE hcas.is_active = 1 AND hcas.hf_account_type = 1
        ) hca ON het.welfare_unit = hca.welfare_unit
        LEFT JOIN hf_com_account_class hcacb ON hca.com_account_id = hcacb.com_account_id AND hcacb.is_active = 1 AND hcacb.hf_type = 1
        LEFT JOIN hf_com_account_class hcaca ON hca.com_account_id = hcaca.com_account_id AND hcaca.is_active = 1 AND hcaca.hf_type = 2
        LEFT JOIN hf_com_task hctb ON hca.com_account_id = hctb.com_account_id AND hctb.is_active = 1 AND hctb.hf_type = 1 AND IFNULL(hctb.task_status,1) = 1
        LEFT JOIN hf_com_task hcta ON hca.com_account_id = hcta.com_account_id AND hcta.is_active = 1 AND hcta.hf_type = 2 AND IFNULL(hcta.task_status,1) = 1
        LEFT JOIN hf_emp_archive heab ON het.employee_id = heab.employee_id AND het.company_id = heab.company_id AND heab.is_active = 1 AND heab.hf_type = 1
        LEFT JOIN hf_emp_archive heaa ON het.employee_id = heaa.employee_id AND het.company_id = heaa.company_id AND heaa.is_active = 1 AND heaa.hf_type = 2
        <where>
            het.is_active = 1
            AND het.emp_task_id = #{empTaskId}
        </where>
    </select>
    <select id="queryByTaskId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        emp_task_id,
        company_id,
        employee_id,
        emp_archive_id,
        is_change,
        hf_type,
        task_category,
        urgent,
        operation_remind,
        operation_remind_date,
        submitter_id,
        submitter_dept_name,
        submit_time,
        expire_date,
        submitter_remark,
        task_form_content,
        handle_user_id,
        handle_user_name,
        handle_date,
        handle_remark,
        rejection_remark,
        material_sign_record,
        special_task,
        task_status,
        handle_status,
        start_handle_date,
        send_check_date,
        finish_date,
        emp_base,
        start_month,
        end_month,
        ratio_emp,
        ratio_com,
        amount,
        transfer_out_unit,
        transfer_out_unit_account,
        transfer_in_unit,
        transfer_in_unit_account,
        transfer_date,
        feedback_date,
        operate_date,
        business_interface_id,
        task_id,
        is_active,
        created_time,
        modified_time,
        created_by,
        modified_by,
        hf_emp_account,
        in_date
        FROM
        hf_emp_task et
        <where>
            et.is_active = 1
            <if test="companyId != null">
                and et.company_id = #{companyId}
            </if>
            <if test="employeeId != null">
                and et.employee_id = #{employeeId}
            </if>
            <if test="taskId != null">
                and et.task_id=#{taskId}
            </if>
        </where>
    </select>

    <insert id="insertHfEmpTask" useGeneratedKeys="true" keyProperty="empTaskId">
        insert into
        hf_emp_task
        (company_id,
        employee_id,
        emp_archive_id,
        is_change,
        hf_type,
        task_category,
        urgent,
        operation_remind,
        operation_remind_date,
        submitter_id,
        submitter_dept_name,
        submit_time,
        expire_date,
        submitter_remark,
        task_form_content,
        handle_user_id,
        handle_user_name,
        handle_date,
        handle_remark,
        rejection_remark,
        material_sign_record,
        special_task,
        task_status,
        handle_status,
        start_handle_date,
        send_check_date,
        finish_date,
        emp_base,
        start_month,
        end_month,
        ratio_emp,
        ratio_com,
        amount,
        transfer_out_unit,
        transfer_out_unit_account,
        transfer_in_unit,
        transfer_in_unit_account,
        transfer_date,
        feedback_date,
        operate_date,
        business_interface_id,
        task_id,
        is_active,
        created_time,
        modified_time,
        created_by,
        modified_by,
        hf_emp_account,
        in_date) VALUES
        (#{companyId},#{employeeId},#{empArchiveId},#{isChange},#{hfType},#{taskCategory},#{urgent},#{operationRemind},
        #{operationRemindDate},#{submitterId},#{submitterDeptName},#{submitTime},#{expireDate},#{submitterRemark},
        #{taskFormContent},#{handleUserId},#{handleUserName},#{handleDate},#{handleRemark},#{rejectionRemark},#{materialSignRecord},
        #{specialTask},#{taskStatus},#{handleStatus},#{startHandleDate},#{sendCheckDate},#{finishDate},#{empBase},
        #{startMonth},#{endMonth},#{ratioEmp},#{ratioCom},#{amount},#{transferOutUnit},#{transferOutUnitAccount},
        #{transferInUnit},#{transferInUnitAccount},#{transferDate},#{feedbackDate},#{operateDate},#{businessInterfaceId},
        #{taskId},#{isActive},#{createdTime},#{modifiedTime},#{createdBy},#{modifiedBy},#{hfEmpAccount},#{inDate})
    </insert>
</mapper>
