<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ciicsh.gto.afsupportcenter.housefund.fundservice.dao.HfEmpTaskMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.entity.HfEmpTask">
        <id column="emp_task_id" property="empTaskId" />
        <result column="company_id" property="companyId" />
        <result column="employee_id" property="employeeId" />
        <result column="emp_archive_id" property="empArchiveId" />
        <result column="in_date" property="inDate" />
        <result column="out_date" property="outDate" />
        <result column="is_change" property="isChange" />
        <result column="hf_type" property="hfType" />
        <result column="hf_emp_account" property="hfEmpAccount" />
        <result column="process_category" property="processCategory" />
        <result column="task_category" property="taskCategory" />
        <result column="urgent" property="urgent" />
        <result column="operation_remind" property="operationRemind" />
        <result column="operation_remind_date" property="operationRemindDate" />
        <result column="submitter_id" property="submitterId" />
        <result column="submitter_dept_name" property="submitterDeptName" />
        <result column="submit_time" property="submitTime" />
        <result column="expire_date" property="expireDate" />
        <result column="submitter_remark" property="submitterRemark" />
        <result column="task_form_content" property="taskFormContent" />
        <result column="handle_user_id" property="handleUserId" />
        <result column="handle_user_name" property="handleUserName" />
        <result column="handle_date" property="handleDate" />
        <result column="handle_remark" property="handleRemark" />
        <result column="rejection_remark" property="rejectionRemark" />
        <result column="material_sign_record" property="materialSignRecord" />
        <result column="special_task" property="specialTask" />
        <result column="task_status" property="taskStatus" />
        <result column="handle_status" property="handleStatus" />
        <result column="start_handle_date" property="startHandleDate" />
        <result column="send_check_date" property="sendCheckDate" />
        <result column="finish_date" property="finishDate" />
        <result column="emp_base" property="empBase" />
        <result column="start_month" property="startMonth" />
        <result column="end_month" property="endMonth" />
        <result column="ratio_emp" property="ratioEmp" />
        <result column="ratio_com" property="ratioCom" />
        <result column="amount" property="amount" />
        <result column="transfer_out_unit" property="transferOutUnit" />
        <result column="transfer_out_unit_account" property="transferOutUnitAccount" />
        <result column="transfer_in_unit" property="transferInUnit" />
        <result column="transfer_in_unit_account" property="transferInUnitAccount" />
        <result column="transfer_date" property="transferDate" />
        <result column="feedback_date" property="feedbackDate" />
        <result column="operate_date" property="operateDate" />
        <result column="welfare_unit" property="welfareUnit" />
        <result column="business_interface_id" property="businessInterfaceId" />
        <result column="old_agreement_id" property="oldAgreementId" />
        <result column="policy_detail_id" property="policyDetailId" />
        <result column="task_id" property="taskId" />
        <result column="is_active" property="isActive" />
        <result column="created_time" property="createdTime" />
        <result column="modified_time" property="modifiedTime" />
        <result column="created_by" property="createdBy" />
        <result column="modified_by" property="modifiedBy" />
        <result column="leader_ship_id" property="leaderShipId" />
        <result column="leader_ship_name" property="leaderShipName" />
        <result column="created_display_name" property="createdDisplayName" />
        <result column="modified_display_name" property="modifiedDisplayName" />
        <result column="service_center_id" property="serviceCenterId" />
        <result column="service_center" property="serviceCenter" />
        <result column="old_city_code" property="oldCityCode" />
        <result column="new_city_code" property="newCityCode" />
    </resultMap>

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMapBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskExportBo">
		<result column="emp_task_id" property="empTaskId" />
		<result column="company_id" property="companyId" />
        <result column="company_name" property="companyName" />
		<result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="id_num" property="idNum" />
		<result column="hf_type" property="hfType" />
        <result column="hf_emp_account" property="hfEmpAccount" />
        <result column="process_category" property="processCategory" />
		<result column="task_category" property="taskCategory" />
		<result column="urgent" property="urgent" />
        <result column="is_change" property="isChange" />
		<result column="submitter_id" property="submitterId" />
        <result column="submit_time" property="submitTime" />
		<result column="task_id" property="taskId" />
        <result column="created_by" property="createdBy" />
        <result column="created_display_name" property="createdDisplayName" />
	</resultMap>

    <resultMap id="RejectResultMapBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskRejectExportBo" extends="BaseResultMapBo">
        <result column="modified_by" property="modifiedBy" />
        <result column="modified_display_name" property="modifiedDisplayName" />
        <result column="modified_time" property="modifiedTime" />
        <result column="rejection_remark" property="rejectionRemark" />
    </resultMap>

    <resultMap id="BaseResultHandleBo" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.HfEmpTaskHandleBo">
        <result column="emp_task_id" property="empTaskId" />
        <result column="emp_archive_id" property="empArchiveId" />
        <result column="hf_type" property="hfType" />
        <result column="process_category" property="processCategory" />
        <result column="task_category" property="taskCategory" />
        <result column="task_status" property="taskStatus" />
        <result column="is_change" property="isChange" />
        <result column="company_id" property="companyId" />
        <result column="company_name" property="companyName" />
        <result column="employee_id" property="employeeId" />
        <result column="employee_name" property="employeeName" />
        <result column="id_num" property="idNum" />
        <result column="payment_bank" property="paymentBank" />
        <result column="state" property="state" />
        <result column="payment_way" property="paymentWay" />
        <result column="ukey_store" property="ukeyStore" />
        <result column="com_account_id" property="comAccountId" />
        <result column="com_account_name" property="comAccountName" />
        <result column="basic_com_account_class_id" property="basicComAccountClassId" />
        <result column="added_com_account_class_id" property="addedComAccountClassId" />
        <result column="basic_com_task_status" property="basicComTaskStatus" />
        <result column="added_com_task_status" property="addedComTaskStatus" />
        <result column="hf_account_type" property="hfAccountType" />
        <result column="basic_hf_com_account" property="basicHfComAccount" />
        <result column="basic_com_hf_month" property="basicComHfMonth" />
        <result column="basic_end_month" property="basicEndMonth" />
        <result column="added_hf_com_account" property="addedHfComAccount" />
        <result column="added_com_hf_month" property="addedComHfMonth" />
        <result column="added_end_month" property="addedEndMonth" />
        <result column="in_date" property="inDate" />
        <result column="out_date" property="outDate" />
        <result column="hf_emp_account" property="hfEmpAccount" />
        <result column="start_month" property="startMonth" />
        <result column="end_month" property="endMonth" />
        <result column="amount" property="amount" />
        <result column="emp_base" property="empBase" />
        <result column="ratio_com" property="ratioCom" />
        <result column="ratio_emp" property="ratioEmp" />
        <result column="basic_hf_emp_account" property="basicHfEmpAccount" />
        <result column="basic_emp_archive_id" property="basicEmpArchiveId" />
        <result column="basic_archive_status" property="basicArchiveStatus" />
        <result column="added_hf_emp_account" property="addedHfEmpAccount" />
        <result column="added_emp_archive_id" property="addedEmpArchiveId" />
        <result column="added_archive_status" property="addedArchiveStatus" />
        <result column="handle_remark" property="handleRemark" />
        <result column="rejection_remark" property="rejectionRemark" />
        <result column="operation_remind" property="operationRemind" />
        <result column="operation_remind_date" property="operationRemindDate" />
        <result column="leader_ship_id" property="leaderShipId" />
        <result column="leader_ship_name" property="leaderShipName" />
        <result column="created_display_name" property="createdDisplayName" />
        <result column="service_center_id" property="serviceCenterId" />
        <result column="service_center" property="serviceCenter" />
    </resultMap>

    <select id="queryHfEmpTaskReject" resultMap="RejectResultMapBo">
        SELECT
        tmp.emp_task_id,
        tmp.process_category,
        tmp.task_category,
        tmp.urgent,
        tmp.is_change,
        tmp.employee_id,
        tmp.employee_name,
        tmp.id_num,
        tmp.company_id,
        tmp.company_name,
        tmp.hf_type,
        tmp.hf_emp_account,
        tmp.submitter_id,
        tmp.submit_time,
        tmp.task_id,
        tmp.created_by,
        tmp.created_display_name,
        tmp.modified_by,
        tmp.modified_display_name,
        tmp.modified_time,
        tmp.rejection_remark
        FROM (
            SELECT
            het.emp_task_id,
            het.process_category,
            het.task_category,
            het.urgent,
            het.is_change,
            het.employee_id,
            ee.employee_name,
            ee.id_num,
            het.company_id,
            sc.title company_name,
            het.hf_type,
            het.hf_emp_account,
            het.submitter_id,
            het.submit_time,
            het.task_id,
            het.created_by,
            het.created_display_name,
            het.created_time,
            het.modified_by,
            het.modified_display_name,
            het.modified_time,
            het.rejection_remark
            FROM hf_emp_task het
            INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
            INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
            <if test="userId != null">
                INNER JOIN hf_dataauth_company hdc ON het.company_id = hdc.company_id AND hdc.user_id = #{userId}
                INNER JOIN hf_dataauth_welfare_unit hdwu ON het.welfare_unit = hdwu.welfare_unit AND hdwu.user_id = #{userId}
                INNER JOIN hf_dataauth_task_category hdtc ON het.task_category = hdtc.task_category AND hdtc.user_id = #{userId}
            </if>
            <if test="hfAccountType != null or paymentBank != null or hfComAccount != null or processStatus != null">
                INNER JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
                INNER JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND
                hcas.hf_account_type = 3
            </if>
            <if test="hfAccountType != null">
                AND hcas.hf_account_type = #{hfAccountType}
            </if>
            <if test="paymentBank != null">
                AND hcas.payment_bank = #{paymentBank}
            </if>
            <if test="hfComAccount != null">
                INNER JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND
                hcac.hf_type = het.hf_type
                AND hcac.hf_com_account = #{hfComAccount}
            </if>
            <where>
                het.is_active = 1 AND IFNULL(het.task_status, 1) = 4 AND het.welfare_unit = 1
                <if test="exceptTaskCategories != null">
                    AND het.task_category NOT IN (${exceptTaskCategories})
                </if>
                <if test="includeTaskCategories != null">
                    AND het.task_category IN (${includeTaskCategories})
                </if>
                <if test="processCategory != null">
                    AND het.process_category = #{processCategory}
                </if>
                <if test="taskCategory != null">
                    AND het.task_category = #{taskCategory}
                </if>
                <if test="employeeId != null">
                    AND ee.employee_id = #{employeeId}
                </if>
                <if test="employeeName != null">
                    AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
                </if>
                <if test="idNum != null">
                    AND ee.id_num = #{idNum}
                </if>
                <if test="companyId != null">
                    AND sc.company_id = #{companyId}
                </if>
                <if test="hfType != null">
                    AND het.hf_type = #{hfType}
                </if>
                <if test="urgent != null">
                    AND het.urgent = #{urgent}
                </if>
                <if test="isChange != null">
                    AND IFNULL(het.is_change,0) = #{isChange}
                </if>
                <if test="submitTimeStart != null">
                    AND het.submit_time >= #{submitTimeStart}
                </if>
                <if test="submitTimeEnd != null">
                    AND #{submitTimeEnd} >= het.submit_time
                </if>
                <if test="processStatus == 1">
                    AND het.submit_time <![CDATA[ <= ]]>
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
                <if test="processStatus == 2">
                    AND het.submit_time >
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
            </where>
            UNION ALL
            SELECT
            het.emp_task_id,
            het.process_category,
            het.task_category,
            het.urgent,
            het.is_change,
            het.employee_id,
            ee.employee_name,
            ee.id_num,
            het.company_id,
            sc.title company_name,
            het.hf_type,
            het.hf_emp_account,
            het.submitter_id,
            het.submit_time,
            het.task_id,
            het.created_by,
            het.created_display_name,
            het.created_time,
            het.modified_by,
            het.modified_display_name,
            het.modified_time,
            het.rejection_remark
            FROM hf_emp_task het
            INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
            INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
            <if test="userId != null">
                INNER JOIN hf_dataauth_company hdc ON het.company_id = hdc.company_id AND hdc.user_id = #{userId}
                INNER JOIN hf_dataauth_welfare_unit hdwu ON het.welfare_unit = hdwu.welfare_unit AND hdwu.user_id = #{userId}
                INNER JOIN hf_dataauth_task_category hdtc ON het.task_category = hdtc.task_category AND hdtc.user_id = #{userId}
            </if>
            <if test="hfAccountType != null or paymentBank != null or hfComAccount != null or processStatus != null">
                INNER JOIN hf_com_account hcas ON hcas.is_active = 1 AND
                ((hcas.hf_account_type = 1 AND het.welfare_unit = 2) OR (hcas.hf_account_type = 2 AND het.welfare_unit = 3))
            </if>
            <if test="hfAccountType != null">
                AND hcas.hf_account_type = #{hfAccountType}
            </if>
            <if test="paymentBank != null">
                AND hcas.payment_bank = #{paymentBank}
            </if>
            <if test="hfComAccount != null">
                INNER JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND
                hcac.hf_type = het.hf_type
                AND hcac.hf_com_account = #{hfComAccount}
            </if>
            <where>
                het.is_active = 1 AND IFNULL(het.task_status, 1) = 4 AND het.welfare_unit > 1
                <if test="exceptTaskCategories != null">
                    AND het.task_category NOT IN (${exceptTaskCategories})
                </if>
                <if test="includeTaskCategories != null">
                    AND het.task_category IN (${includeTaskCategories})
                </if>
                <if test="processCategory != null">
                    AND het.process_category = #{processCategory}
                </if>
                <if test="taskCategory != null">
                    AND het.task_category = #{taskCategory}
                </if>
                <if test="employeeId != null">
                    AND ee.employee_id = #{employeeId}
                </if>
                <if test="employeeName != null">
                    AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
                </if>
                <if test="idNum != null">
                    AND ee.id_num = #{idNum}
                </if>
                <if test="companyId != null">
                    AND sc.company_id = #{companyId}
                </if>
                <if test="hfType != null">
                    AND het.hf_type = #{hfType}
                </if>
                <if test="urgent != null">
                    AND het.urgent = #{urgent}
                </if>
                <if test="isChange != null">
                    AND IFNULL(het.is_change,0) = #{isChange}
                </if>
                <if test="submitTimeStart != null">
                    AND het.submit_time >= #{submitTimeStart}
                </if>
                <if test="submitTimeEnd != null">
                    AND #{submitTimeEnd} >= het.submit_time
                </if>
                <if test="processStatus == 1">
                    AND het.submit_time <![CDATA[ <= ]]>
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
                <if test="processStatus == 2">
                    AND het.submit_time >
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
            </where>
        ) tmp
        ORDER BY tmp.created_time DESC
    </select>

    <select id="queryHfEmpTask" resultMap="BaseResultMapBo">
        SELECT
        tmp.emp_task_id,
        tmp.process_category,
        tmp.task_category,
        tmp.urgent,
        tmp.is_change,
        tmp.employee_id,
        tmp.employee_name,
        tmp.id_num,
        tmp.company_id,
        tmp.company_name,
        tmp.hf_type,
        tmp.hf_emp_account,
        tmp.submitter_id,
        tmp.submit_time,
        tmp.task_id,
        tmp.created_by,
        tmp.created_display_name
        FROM (
            SELECT
            het.emp_task_id,
            het.process_category,
            het.task_category,
            het.urgent,
            het.is_change,
            het.employee_id,
            ee.employee_name,
            ee.id_num,
            het.company_id,
            sc.title company_name,
            het.hf_type,
            het.hf_emp_account,
            het.submitter_id,
            het.submit_time,
            het.task_id,
            het.created_by,
            het.created_display_name,
            het.created_time
            FROM hf_emp_task het
            INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
            INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
            <if test="userId != null">
                INNER JOIN hf_dataauth_company hdc ON het.company_id = hdc.company_id AND hdc.user_id = #{userId}
                INNER JOIN hf_dataauth_welfare_unit hdwu ON het.welfare_unit = hdwu.welfare_unit AND hdwu.user_id = #{userId}
                INNER JOIN hf_dataauth_task_category hdtc ON het.task_category = hdtc.task_category AND hdtc.user_id = #{userId}
            </if>
            <if test="hfAccountType != null or paymentBank != null or hfComAccount != null or processStatus != null">
                INNER JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
                INNER JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND
                hcas.hf_account_type = 3
            </if>
            <if test="hfAccountType != null">
                AND hcas.hf_account_type = #{hfAccountType}
            </if>
            <if test="paymentBank != null">
                AND hcas.payment_bank = #{paymentBank}
            </if>
            <if test="hfComAccount != null">
                INNER JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND
                hcac.hf_type = het.hf_type
                AND hcac.hf_com_account = #{hfComAccount}
            </if>
            <where>
                het.is_active = 1 AND IFNULL(het.task_status, 1) != 5 AND het.welfare_unit = 1
                <if test="exceptTaskCategories != null">
                    AND het.task_category NOT IN (${exceptTaskCategories})
                </if>
                <if test="includeTaskCategories != null">
                    AND het.task_category IN (${includeTaskCategories})
                </if>
                <if test="processCategory != null">
                    AND het.process_category = #{processCategory}
                </if>
                <if test="taskCategory != null">
                    AND het.task_category = #{taskCategory}
                </if>
                <if test="employeeId != null">
                    AND ee.employee_id = #{employeeId}
                </if>
                <if test="employeeName != null">
                    AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
                </if>
                <if test="idNum != null">
                    AND ee.id_num = #{idNum}
                </if>
                <if test="companyId != null">
                    AND sc.company_id = #{companyId}
                </if>
                <if test="hfType != null">
                    AND het.hf_type = #{hfType}
                </if>
                <if test="urgent != null">
                    AND het.urgent = #{urgent}
                </if>
                <if test="isChange != null">
                    AND IFNULL(het.is_change,0) = #{isChange}
                </if>
                <if test="submitTimeStart != null">
                    AND het.submit_time >= #{submitTimeStart}
                </if>
                <if test="submitTimeEnd != null">
                    AND #{submitTimeEnd} >= het.submit_time
                </if>
                <if test="taskStatus != null">
                    AND IFNULL(het.task_status, 1) = #{taskStatus}
                </if>
                <if test="processStatus == 1">
                    AND het.submit_time <![CDATA[ <= ]]>
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
                <if test="processStatus == 2">
                    AND het.submit_time >
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
            </where>
            UNION ALL
            SELECT
            het.emp_task_id,
            het.process_category,
            het.task_category,
            het.urgent,
            het.is_change,
            het.employee_id,
            ee.employee_name,
            ee.id_num,
            het.company_id,
            sc.title company_name,
            het.hf_type,
            het.hf_emp_account,
            het.submitter_id,
            het.submit_time,
            het.task_id,
            het.created_by,
            het.created_display_name,
            het.created_time
            FROM hf_emp_task het
            INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
            INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
            <if test="userId != null">
                INNER JOIN hf_dataauth_company hdc ON het.company_id = hdc.company_id AND hdc.user_id = #{userId}
                INNER JOIN hf_dataauth_welfare_unit hdwu ON het.welfare_unit = hdwu.welfare_unit AND hdwu.user_id = #{userId}
                INNER JOIN hf_dataauth_task_category hdtc ON het.task_category = hdtc.task_category AND hdtc.user_id = #{userId}
            </if>
            <if test="hfAccountType != null or paymentBank != null or hfComAccount != null or processStatus != null">
                INNER JOIN hf_com_account hcas ON hcas.is_active = 1 AND
                ((hcas.hf_account_type = 1 AND het.welfare_unit = 2) OR (hcas.hf_account_type = 2 AND het.welfare_unit = 3))
            </if>
            <if test="hfAccountType != null">
                AND hcas.hf_account_type = #{hfAccountType}
            </if>
            <if test="paymentBank != null">
                AND hcas.payment_bank = #{paymentBank}
            </if>
            <if test="hfComAccount != null">
                INNER JOIN hf_com_account_class hcac ON hcas.com_account_id = hcac.com_account_id AND hcac.is_active = 1 AND
                hcac.hf_type = het.hf_type
                AND hcac.hf_com_account = #{hfComAccount}
            </if>
            <where>
                het.is_active = 1 AND IFNULL(het.task_status, 1) != 5 AND het.welfare_unit > 1
                <if test="exceptTaskCategories != null">
                    AND het.task_category NOT IN (${exceptTaskCategories})
                </if>
                <if test="includeTaskCategories != null">
                    AND het.task_category IN (${includeTaskCategories})
                </if>
                <if test="processCategory != null">
                    AND het.process_category = #{processCategory}
                </if>
                <if test="taskCategory != null">
                    AND het.task_category = #{taskCategory}
                </if>
                <if test="employeeId != null">
                    AND ee.employee_id = #{employeeId}
                </if>
                <if test="employeeName != null">
                    AND ee.employee_name LIKE CONCAT('%',#{employeeName},'%')
                </if>
                <if test="idNum != null">
                    AND ee.id_num = #{idNum}
                </if>
                <if test="companyId != null">
                    AND sc.company_id = #{companyId}
                </if>
                <if test="hfType != null">
                    AND het.hf_type = #{hfType}
                </if>
                <if test="urgent != null">
                    AND het.urgent = #{urgent}
                </if>
                <if test="isChange != null">
                    AND IFNULL(het.is_change,0) = #{isChange}
                </if>
                <if test="submitTimeStart != null">
                    AND het.submit_time >= #{submitTimeStart}
                </if>
                <if test="submitTimeEnd != null">
                    AND #{submitTimeEnd} >= het.submit_time
                </if>
                <if test="taskStatus != null">
                    AND IFNULL(het.task_status, 1) = #{taskStatus}
                </if>
                <if test="processStatus == 1">
                    AND het.submit_time <![CDATA[ <= ]]>
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
                <if test="processStatus == 2">
                    AND het.submit_time >
                    (
                    SELECT CASE WHEN DAY(CURDATE()) > hcas.close_day THEN
                    CONCAT(date_format(DATE_ADD(CURDATE(),INTERVAL 1 MONTH),'%Y-%m'),'-',hcas.close_day)
                    ELSE
                    CONCAT(date_format(CURDATE(),'%Y-%m'),'-',hcas.close_day) END
                    )
                </if>
            </where>
        ) tmp
        ORDER BY tmp.created_time DESC
    </select>

    <select id="getEmpTaskHandleData" resultMap="BaseResultHandleBo">
        SELECT DISTINCT
        het.emp_task_id,
        het.emp_archive_id,
        het.hf_type,
        het.process_category,
        het.task_category,
        het.task_status,
        het.is_change,
        sc.company_id,
        sc.title AS company_name,
        hca.com_account_id,
        hca.payment_bank,
        hca.state,
        hca.payment_way,
        hca.ukey_store,
        IFNULL(hca.com_account_name, hctb.com_account_name) AS com_account_name,
        hcacb.com_account_class_id AS basic_com_account_class_id,
        hcaca.com_account_class_id AS added_com_account_class_id,
        CASE WHEN hcacb.com_account_class_id IS NOT NULL THEN 3 ELSE hctb.task_status END AS basic_com_task_status,
        CASE WHEN hcaca.com_account_class_id IS NOT NULL THEN 3 ELSE hcta.task_status END AS added_com_task_status,
        IFNULL(hca.hf_account_type, 3) AS hf_account_type,
        IFNULL(hcacb.hf_com_account, hctb.hf_com_account) AS basic_hf_com_account,
        IFNULL(hcacb.com_hf_month, CONVERT(hctb.com_start_month, SIGNED)) AS basic_com_hf_month,
        IFNULL(hcacb.end_month, hctb.end_month) AS basic_end_month,
        IFNULL(hcaca.hf_com_account, hcta.hf_com_account) AS added_hf_com_account,
        IFNULL(hcaca.com_hf_month, CONVERT(hcta.com_start_month, SIGNED)) AS added_com_hf_month,
        IFNULL(hcaca.end_month, hcta.end_month) AS added_end_month,
        ee.employee_id,
        ee.employee_name,
        ee.id_num,
        het.in_date,
        het.out_date,
        het.hf_emp_account,
        het.task_status,
        het.start_month,
        het.end_month,
        het.amount,
        het.emp_base,
        het.ratio_com,
        het.ratio_emp,
        het.emp_archive_id,
        heab.hf_emp_account AS basic_hf_emp_account,
        heab.emp_archive_id AS basic_emp_archive_id,
        heab.archive_status AS basic_archive_status,
        heaa.hf_emp_account AS added_hf_emp_account,
        heaa.emp_archive_id AS added_emp_archive_id,
        heaa.archive_status AS added_archive_status,
        het.handle_remark,
        het.rejection_remark,
        het.operation_remind,
        het.operation_remind_date,
        het.leader_ship_id,
        het.leader_ship_name,
        het.created_display_name,
        het.service_center_id,
        het.service_center
        FROM hf_emp_task het
        INNER JOIN sal_company sc ON het.company_id = sc.company_id AND sc.is_active = 1
        INNER JOIN emp_employee ee ON het.employee_id = ee.employee_id
        <if test="userId != null">
            INNER JOIN hf_dataauth_company hdc ON het.company_id = hdc.company_id AND hdc.user_id = #{userId}
            INNER JOIN hf_dataauth_welfare_unit hdwu ON het.welfare_unit = hdwu.welfare_unit AND hdwu.user_id = #{userId}
            INNER JOIN hf_dataauth_task_category hdtc ON het.task_category = hdtc.task_category AND hdtc.user_id = #{userId}
        </if>
        LEFT JOIN
        (
        SELECT DISTINCT hcas.com_account_id,het.welfare_unit,hcas.payment_bank,hcas.state,hcas.payment_way,hcas.ukey_store,hcas.hf_account_type,hcas.com_account_name
        FROM hf_emp_task het
        LEFT JOIN hf_account_com_relation hacr ON hacr.company_id = het.company_id AND hacr.is_active = 1
        LEFT JOIN hf_com_account hcas ON hcas.com_account_id = hacr.com_account_id AND hcas.is_active = 1 AND hcas.hf_account_type = 3
        WHERE het.is_active = 1 AND het.welfare_unit = 1 AND het.emp_task_id = #{empTaskId}
        UNION ALL
        SELECT DISTINCT hcas.com_account_id,2 AS welfare_unit,hcas.payment_bank,hcas.state,hcas.payment_way,hcas.ukey_store,hcas.hf_account_type,hcas.com_account_name
        FROM hf_com_account hcas
        LEFT JOIN hf_account_com_relation hacr ON hcas.com_account_id = hacr.com_account_id AND hacr.is_active = 1
        WHERE hcas.is_active = 1 AND hcas.hf_account_type = 1
        UNION ALL
        SELECT DISTINCT hcas.com_account_id,3 AS welfare_unit,hcas.payment_bank,hcas.state,hcas.payment_way,hcas.ukey_store,hcas.hf_account_type,hcas.com_account_name
        FROM hf_com_account hcas
        LEFT JOIN hf_account_com_relation hacr ON hcas.com_account_id = hacr.com_account_id AND hacr.is_active = 1
        WHERE hcas.is_active = 1 AND hcas.hf_account_type = 2
        ) hca ON het.welfare_unit = hca.welfare_unit
        LEFT JOIN hf_com_account_class hcacb ON hca.com_account_id = hcacb.com_account_id AND hcacb.is_active = 1 AND hcacb.hf_type = 1
        LEFT JOIN hf_com_account_class hcaca ON hca.com_account_id = hcaca.com_account_id AND hcaca.is_active = 1 AND hcaca.hf_type = 2
        LEFT JOIN hf_com_task hctb ON hca.com_account_id = hctb.com_account_id AND hctb.is_active = 1 AND hctb.hf_type = 1 AND IFNULL(hctb.task_status,1) = 1
        LEFT JOIN hf_com_task hcta ON hca.com_account_id = hcta.com_account_id AND hcta.is_active = 1 AND hcta.hf_type = 2 AND IFNULL(hcta.task_status,1) = 1
        LEFT JOIN
        (
        SELECT hea.company_id, hea.employee_id, hea.hf_emp_account, hea.emp_archive_id, hea.archive_status
        FROM hf_emp_task het INNER JOIN hf_emp_archive hea ON het.company_id = hea.company_id AND het.employee_id = hea.employee_id
        WHERE hea.is_active = 1 AND hea.hf_type = 1
        AND het.emp_task_id = #{empTaskId}
        ORDER BY hea.created_time DESC LIMIT 1
        ) heab ON het.employee_id = heab.employee_id AND het.company_id = heab.company_id
        LEFT JOIN
        (
        SELECT hea.company_id, hea.employee_id, hea.hf_emp_account, hea.emp_archive_id, hea.archive_status
        FROM hf_emp_task het INNER JOIN hf_emp_archive hea ON het.company_id = hea.company_id AND het.employee_id = hea.employee_id
        WHERE hea.is_active = 1 AND hea.hf_type = 2
        AND het.emp_task_id = #{empTaskId}
        ORDER BY hea.created_time DESC LIMIT 1
        ) heaa ON het.employee_id = heaa.employee_id AND het.company_id = heaa.company_id
        <where>
            het.is_active = 1
            AND het.emp_task_id = #{empTaskId}
        </where>
    </select>
    <select id="queryByTaskId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        emp_task_id,
        company_id,
        employee_id,
        emp_archive_id,
        is_change,
        hf_type,
        process_category,
        task_category,
        urgent,
        operation_remind,
        operation_remind_date,
        submitter_id,
        submitter_dept_name,
        submit_time,
        expire_date,
        submitter_remark,
        task_form_content,
        handle_user_id,
        handle_user_name,
        handle_date,
        handle_remark,
        rejection_remark,
        material_sign_record,
        special_task,
        task_status,
        handle_status,
        start_handle_date,
        send_check_date,
        finish_date,
        emp_base,
        start_month,
        end_month,
        ratio_emp,
        ratio_com,
        amount,
        transfer_out_unit,
        transfer_out_unit_account,
        transfer_in_unit,
        transfer_in_unit_account,
        transfer_date,
        feedback_date,
        operate_date,
        business_interface_id,
        old_agreement_id,
        task_id,
        is_active,
        created_time,
        modified_time,
        created_by,
        modified_by,
        hf_emp_account,
        in_date,
        out_date
        FROM
        hf_emp_task et
        <where>
            et.is_active = 1
            <if test="companyId != null">
                and et.company_id = #{companyId}
            </if>
            <if test="employeeId != null">
                and et.employee_id = #{employeeId}
            </if>
            <if test="taskId != null">
                and et.task_id=#{taskId}
            </if>
            <if test="hfType != null">
                and et.hf_type=#{hfType}
            </if>
            <if test="businessInterfaceId != null">
                and et.business_interface_id = #{businessInterfaceId}
            </if>
        </where>
    </select>

    <insert id="insertHfEmpTask" useGeneratedKeys="true" keyProperty="empTaskId">
        insert into
        hf_emp_task
        (company_id,
        employee_id,
        emp_archive_id,
        is_change,
        hf_type,
        task_category,
        urgent,
        operation_remind,
        operation_remind_date,
        submitter_id,
        submitter_dept_name,
        submit_time,
        expire_date,
        submitter_remark,
        task_form_content,
        handle_user_id,
        handle_user_name,
        handle_date,
        handle_remark,
        rejection_remark,
        material_sign_record,
        special_task,
        task_status,
        handle_status,
        start_handle_date,
        send_check_date,
        finish_date,
        emp_base,
        start_month,
        end_month,
        ratio_emp,
        ratio_com,
        amount,
        transfer_out_unit,
        transfer_out_unit_account,
        transfer_in_unit,
        transfer_in_unit_account,
        transfer_date,
        feedback_date,
        operate_date,
        business_interface_id,
        task_id,
        is_active,
        created_time,
        modified_time,
        created_by,
        modified_by,
        hf_emp_account,
        in_date) VALUES
        (#{companyId},#{employeeId},#{empArchiveId},#{isChange},#{hfType},#{taskCategory},#{urgent},#{operationRemind},
        #{operationRemindDate},#{submitterId},#{submitterDeptName},#{submitTime},#{expireDate},#{submitterRemark},
        #{taskFormContent},#{handleUserId},#{handleUserName},#{handleDate},#{handleRemark},#{rejectionRemark},#{materialSignRecord},
        #{specialTask},#{taskStatus},#{handleStatus},#{startHandleDate},#{sendCheckDate},#{finishDate},#{empBase},
        #{startMonth},#{endMonth},#{ratioEmp},#{ratioCom},#{amount},#{transferOutUnit},#{transferOutUnitAccount},
        #{transferInUnit},#{transferInUnitAccount},#{transferDate},#{feedbackDate},#{operateDate},#{businessInterfaceId},
        #{taskId},#{isActive},#{createdTime},#{modifiedTime},#{createdBy},#{modifiedBy},#{hfEmpAccount},#{inDate})
    </insert>

    <insert id="createTransEmpTask">
        INSERT INTO hf_emp_task(
            company_id,
            employee_id,
            in_date,
            out_date,
            is_change,
            hf_type,
            hf_emp_account,
            process_category,
            task_category,
            urgent,
            submitter_id,
            submitter_dept_name,
            submit_time,
            expire_date,
            task_form_content,
            task_status,
            start_handle_date,
            send_check_date,
            emp_base,
            start_month,
            end_month,
            ratio_emp,
            ratio_com,
            amount,
            transfer_out_unit,
            transfer_out_unit_account,
            transfer_in_unit,
            transfer_in_unit_account,
            transfer_date,
            welfare_unit,
            af_bpo_fc,
            policy_detail_id,
            is_active,
            created_by,
            created_display_name,
            modified_by,
            modified_display_name,
            leader_ship_id,
            leader_ship_name,
            service_center_id,
            service_center
        ) SELECT
            company_id,
            employee_id,
            in_date,
            out_date,
            is_change,
            hf_type,
            hf_emp_account,
            9,
            8,
            urgent,
            submitter_id,
            submitter_dept_name,
            NOW(),
            expire_date,
            task_form_content,
            #{taskStatus},
            start_handle_date,
            send_check_date,
            emp_base,
            start_month,
            end_month,
            ratio_emp,
            ratio_com,
            amount,
            #{transferOutUnit},
            #{transferOutUnitAccount},
            #{transferInUnit},
            #{transferInUnitAccount},
            #{transferDate},
            welfare_unit,
            af_bpo_fc,
            policy_detail_id,
            1,
            created_by,
            created_display_name,
            #{modifiedBy},
            #{modifiedDisplayName},
            leader_ship_id,
            leader_ship_name,
            service_center_id,
            service_center
        FROM hf_emp_task
        WHERE emp_task_id = #{empTaskId}
        AND is_active = 1
    </insert>

    <resultMap id="EmpTaskTransferRM" type="com.ciicsh.gto.afsupportcenter.housefund.fundservice.bo.transfer.EmpTaskTransferBo">
        <result column="emp_task_id" property="empTaskId"/>
        <result column="hf_type" property="hfType"/>
        <result column="company_id" property="companyId"/>
        <result column="title" property="title"/>
        <result column="employee_id" property="employeeId"/>
        <result column="employee_name" property="employeeName"/>
        <result column="id_num" property="idNum"/>
        <result column="status" property="status"/>
        <result column="task_status" property="taskStatus"/>
        <result column="archive_status" property="archiveStatus"/>
        <result column="in_date" property="inDate"/>
        <result column="submit_time" property="submitTime"/>
        <result column="submitter_id" property="submitterId"/>
        <result column="transfer_in_unit" property="transferInUnit"/>
        <result column="transfer_in_unit_account" property="transferInUnitAccount"/>
        <result column="transfer_out_unit" property="transferOutUnit"/>
        <result column="transfer_out_unit_account" property="transferOutUnitAccount"/>
        <result column="com_account_id" property="comAccountId"/>
        <result column="hf_account_type" property="hfAccountType"/>
        <result column="hf_emp_account" property="hfEmpAccount"/>
        <result column="emp_archive_id" property="empArchiveId"/>
        <result column="created_display_name" property="createdDisplayName"/>
    </resultMap>

    <select id="queryEmpTaskTransfer" resultMap="EmpTaskTransferRM">
        SELECT
        et.emp_task_id,et.hf_type,com.company_id,com.title,emp.employee_id,emp.employee_name,emp.id_num,eoop.`status`,ea.archive_status,eoop.in_date,et.submit_time,et.submitter_id,
        et.transfer_in_unit,et.transfer_in_unit_account,et.transfer_out_unit,et.transfer_out_unit_account,ea.com_account_id,ca.hf_account_type,ea.hf_emp_account,ea.emp_archive_id,
        et.created_display_name
        from hf_emp_task et
        LEFT JOIN hf_emp_archive ea  ON ea.employee_id=et.employee_id AND ea.hf_type=et.hf_type
        AND ea.company_id=et.company_id AND ea.is_active=1
        INNER JOIN emp_af_emp_company eoop ON eoop.company_id=ea.company_id
        AND eoop.employee_id=ea.employee_id AND eoop.is_active=1
        INNER JOIN emp_employee emp ON emp.employee_id=eoop.employee_id
        INNER JOIN sal_company com ON com.company_id=eoop.company_id AND com.is_active=1
        INNER JOIN hf_com_account ca ON ca.com_account_id=ea.com_account_id AND ca.is_active=1
        WHERE et.is_active=1 AND et.task_category = 8

        <if test="empTaskId != null">
            AND et.emp_task_id = #{empTaskId}
        </if>
        <if test="hfType != null">
            AND et.hf_type = #{hfType}
        </if>
        <if test="companyId != null">
            AND com.company_id LIKE CONCAT('%',#{companyId},'%')
        </if>
        <if test="title != null">
            AND com.title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="employeeId != null">
            AND emp.employee_id LIKE CONCAT('%',#{employeeId},'%')
        </if>
        <if test="employeeName != null">
            AND emp.employee_name LIKE CONCAT('%',#{employeeName},'%')
        </if>
        <if test="idNum != null">
            AND emp.id_num LIKE CONCAT('%',#{idNum},'%')
        </if>
        <if test="status != null">
            AND eoop.status = #{status}
        </if>
        <if test="taskStatus != null">
            AND et.task_status = #{taskStatus}
        </if>
        <if test="inDate != null">
            AND eoop.in_date = #{inDate}
        </if>
        <if test="submitTime != null">
            AND et.submit_time = #{submitTime}
        </if>
        <if test="submitterId != null">
            AND et.submitter_id = #{submitterId}
        </if>
        <if test="transferInUnit != null">
            AND et.transfer_in_unit LIKE concat('%',#{transferInUnit},'%')
        </if>
        <if test="transferOutUnit != null">
            AND et.transfer_out_unit LIKE concat('%',#{transferOutUnit},'%')
        </if>
        <if test="hfEmpAccount != null">
            AND ea.hf_emp_account LIKE concat('%',#{hfEmpAccount},'%')
        </if>
        <if test="paymentBank != null">
            AND ca.payment_bank = #{paymentBank}
        </if>
        <if test="comAccountId != null">
            AND ea.com_account_id = #{comAccountId}
        </if>
        <if test="hfAccountType != null">
            AND ca.hf_account_type = #{hfAccountType}
        </if>
        <if test="empArchiveId != null">
            AND ea.emp_archive_id = #{empArchiveId}
        </if>
        <if test="serviceCenterValue != null">
            AND et.service_center_id = #{serviceCenterValue}
        </if>
    </select>

    <select id="queryEmpTaskTransferNewTask" resultMap="EmpTaskTransferRM">
    SELECT
    com.company_id,com.title,emp.employee_id,emp.employee_name,emp.id_num,eoop.`status`,eoop.in_date,ea.hf_type
    from emp_af_emp_company eoop
		INNER JOIN hf_emp_archive ea ON eoop.company_id=ea.company_id and eoop.employee_id=ea.employee_id
    INNER JOIN emp_employee emp ON emp.employee_id=eoop.employee_id
    INNER JOIN sal_company com ON com.company_id=eoop.company_id
    WHERE eoop.is_active=1
        <if test="companyId != null">
            AND com.company_id  LIKE CONCAT('%',#{companyId},'%')
        </if>
        <if test="title != null">
            AND com.title LIKE CONCAT('%',#{title},'%')
        </if>
        <if test="employeeId != null">
            AND emp.employee_id LIKE CONCAT('%',#{employeeId},'%')
        </if>
        <if test="employeeName != null">
            AND emp.employee_name LIKE CONCAT('%',#{employeeName},'%')
        </if>
        <if test="idNum != null">
            AND emp.id_num LIKE CONCAT('%',#{idNum},'%')
        </if>
        <if test="inDate != null">
            AND eoop.in_date = #{inDate}
        </if>
        <if test="hfType != null">
            AND ea.hf_type = #{hfType}
        </if>
        <if test="status != null">
            AND eoop.status = #{status}
        </if>
    </select>
    <select id="fetchPrintInfo" resultType="Map">
        SELECT et.*,emp.employee_name,ea.hf_emp_account as emp_account
        FROM hf_emp_task et
        LEFT JOIN hf_emp_archive ea
                ON  ea.employee_id=et.employee_id
                AND ea.company_id=et.company_id
                AND ea.hf_type=et.hf_type
                AND ea.is_active=1
                AND ea.hf_type=et.hf_type
        LEFT JOIN hf_com_account ca
                ON  ea.com_account_id=ca.com_account_id
                AND ca.is_active=1
        INNER  JOIN emp_employee emp ON  emp.employee_id=et.employee_id
        where et.is_active=1 AND et.emp_task_id=#{empTaskId}

    </select>

</mapper>
